{"version":3,"sources":["Images/ticket2.png","Sounds/lose.wav","Images/GamePlay/GameBG.jpg","Images/GamePlay/ScreenBG.jpg","Sounds/clapper.wav","Sounds/tick.wav","Images/HowToPlay/Main/mainAnimation.png","Images/HowToPlay/Main/mainAnimationWeb.png","Images/HowToPlay/GameOver/SinglePlayer/gameover.png","Images/HowToPlay/GameOver/SinglePlayer/gameOverMobile.png","Images/HowToPlay/WrongAnswer/WrongAnswerScreen.png","Images/HowToPlay/WrongAnswer/WrongAnswerScreenMobile.png","Images/HowToPlay/Questions/SinglePlayer/question-page.png","Images/HowToPlay/Questions/SinglePlayer/question-answered.png","Images/HowToPlay/Questions/SinglePlayer/question-page-mobile.png","Images/HowToPlay/Questions/SinglePlayer/question-answered-mobile.png","Images/HowToPlay/GameOver/EasySinglePlayer/gameOverAnimationWEb.png","Images/HowToPlay/GameOver/EasySinglePlayer/gameOverAnimationMobile.png","Images/HowToPlay/GameOver/EasySinglePlayer/oneLifeAnimationMobile.png","Images/HowToPlay/GameOver/EasySinglePlayer/oneLifeAnimationWeb.png","Images/HowToPlay/Questions/EasySinglePlayer/gameStartEasy.png","Images/HowToPlay/Questions/EasySinglePlayer/gameStartEasyMobile.png","Images/HowToPlay/Settings/gameSettingsAnimation.gif","Images/HowToPlay/Settings/gameSettingMobile.gif","Layout/Theater.js","Scenes/GameOver.js","Components/Header/SettingsModal.js","Layout/Header.js","Utils/FetchApi.js","Scenes/Main.js","Layout/Footer.js","Utils/madLibsArray.js","Utils/RandomGenerator.js","Components/Question/GenerateQuestion.js","Components/Indicators/Clock.js","Components/Indicators/Timer.js","Components/Question/TrueFalse.js","Components/Question/MultipleChoice.js","Components/Indicators/Badge.js","Components/Indicators/Lives.js","Scenes/Question.js","Components/CorrectAnswer/Trailer.js","Scenes/CorrectAnswer.js","Scenes/Credits.js","Scenes/About.js","Components/Header/GamePlayMode.js","Scenes/WrongAnswer.js","Components/HowToPlay/CorrectAnswerDemo.js","Components/HowToPlay/MainAnimation.js","Components/HowToPlay/GameOverHelp.js","Components/HowToPlay/WrongAnswerHelp.js","Components/HowToPlay/QuestionInstructions.js","Components/HowToPlay/LoseGameInstruction.js","Components/HowToPlay/EasyModeLivesHelp.js","Components/HowToPlay/GameInstructionSetting.js","Scenes/HowToPlay.js","Layout/Nav.js","Utils/reducer.js","Utils/store.js","App.js","Images/Main/IntroAnimation/marqueeBackground.png","Images/Main/IntroAnimation/clapper2-open.png","Images/Main/IntroAnimation/clapper2-closed.png","Images/Main/IntroAnimation/clapper2-no-arm-arial-revised.png","Images/HowToPlay/CorrectAnswer/correctAnswerDemo.png","Images/HowToPlay/CorrectAnswer/correctAnswerDemoMobile.png","Images/ticket.png"],"names":["module","exports","styles","StyleSheet","create","layout","backgroundColor","height","gamebg","width","contentArea","maxWidth","alignItems","justifyContent","alignSelf","marginTop","contentWrap","indicators","display","flexDirection","marginBottom","buttonsContainer","connect","state","scene","content","buttons","useWindowDimensions","View","style","ImageBackground","source","GameBG","ScreenBG","aspectRatio","padding","gameOverStyle","fontSize","textAlign","fontFamily","color","backToStartButtonText","ticket","flex","buttonStyle","minWidth","minHeight","marginRight","buttonRow","winningStreak","selectedMovie","dispatch","resetWinningStreak","type","setScene","name","resetSelectedMovie","shareMessage","useState","sound","setSound","useFonts","Limelight_400Regular","fontsLoaded","useEffect","a","async","Audio","Sound","createAsync","lose","playAsync","playSound","unloadAsync","undefined","questionHeader","Text","Platform","OS","Pressable","onPress","Share","share","message","result","action","sharedAction","activityType","dismissedAction","alert","require","navigator","clipboard","writeText","modalView","margin","borderRadius","paddingTop","paddingRight","paddingBottom","paddingLeft","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","label","fontWeight","input","exit","settingHeader","gamePlayMode","modalVisible","setGamePlayMode","mode","setModalVisible","visible","Modal","animationType","transparent","onRequestClose","AntDesign","size","selectedValue","onValueChange","newMode","itemIndex","Item","value","container","borderBottomWidth","borderColor","movieGame","movieGameMobile","movieGameMini","position","top","right","FetchApi","axios","all","Array","map","item","index","get","then","res","moviesResponse","data","results","catch","err","console","log","response","moviesList","forEach","movieList","concat","getPerformerName","movieId","credits","getGenreName","genreId","matchGenre","genres","filter","genre","id","backgroundPicture","clapperViews","introImages","fontText","background","left","titleAndButtonContainer","setMovies","movies","setPerformerName","performerName","delay","clapperOpenFade","useRef","Animated","Value","current","clapperClosedFade","textFade","boardWithTextFade","timeout","setTimeout","clapper","volume","parallel","timing","toValue","duration","useNativeDriver","stagger","start","clearTimeout","titleFontSize","buttonSize","backgroundHeight","spacerHeight","clapperWidth","alt","opacity","Image","resizeMode","interpolate","inputRange","outputRange","zIndex","buttonText","borderTopWidth","textColor","madLibsArray","year","release_date","substr","month","day","movieDate","generateRandomDate","Date","Math","floor","random","generateRandomCastNumber","randomCast","cast","length","randomCast1","randomCast2","question","title","answer","known_for_department","toLocaleDateString","RandomGenerator","setSelectedMovie","hasValidValues","valuesList","every","isArray","Object","values","fetchNewMovie","movie","genre_ids","spread","castRes","genreRes","slice","count","isValid","newMovie","movieQueryValues","Alert","text","questionObject","randomIndex","generateQuestionAndCheckUndefined","Clock","isPlaying","onUpdate","onComplete","colors","colorsTime","strokeWidth","trailColor","remainingTime","timer","setIsPlaying","tick","error","loadSound","replayAsync","questions","lives","increaseWinningStreak","decreaseLives","resetLives","button","selectedAnswer","setSelectedAnswer","hasAnswered","setHasAnswered","isCorrect","selection","getIcon","FontAwesome","true","TouchableOpacity","ticketOption","marginLeft","textDecorationLine","false","getColorF","paddingHorizontal","multipleAnswer","correctAnswer","setCorrectAnswer","runRandom","setRunRandom","array","currentIndex","randomizeAnswer","colorU","colorT","colorF","badgeDisplay","badgeWrap","badge","SimpleLineIcons","badgeText","lineHeight","displayLives","i","push","MaterialCommunityIcons","livesIcon","livesDisplay","livesText","livesWrap","heading","questionText","keys","Trailer","playing","setPlaying","youTubeId","setYouTubeId","key","getYouTubeId","onStateChange","useCallback","window","postMessage","bind","mediaPlaybackRequiresUserAction","javaScriptEnabled","domStorageEnabled","uri","play","videoId","onChangeState","flexShrink","paddingVertical","h2","marginVertical","ticketButton","maxHeight","ticketText","contentLayout","titles","names","headerStyle","textStyle","setscene","contentContainer","headings","mainContainer","ticketImage","ScrollView","scrollView","subContainer","Linking","openURL","borderWidth","gamePlayText","insets","useSafeAreaInsets","currentMode","select","ios","android","default","h2Fold","livesTextFold","ohno","accessibilityRole","accessibilityHint","CorrectAnswerDemo","translation","ValueXY","x","y","pointerSize","screenWidth","loop","sequence","transform","translateX","translateY","scale","Entypo","animationText","animationFontAwesome","MainAnimation","easing","Easing","bounce","mainAnimationWeb","mainAnimation","GameOverHelp","gameover","gameOverMobile","WrongAnswerHelp","lifePointerCircle","WrongAnswerScreen","WrongAnswerScreenMobile","QuestionInstructions","questionPage","questionPageMobile","questionPageAnswered","questionPageAnsweredMobile","extrapolate","LoseGameInstruction","lifePopcornIcon","backgroundFade","oneLifeAnimationWeb","oneLifeAnimationMobile","loseGameAnimationWeb","loseGameAnimationMobile","EasyModeLivesHelp","GameStartEasy","GameStartEasyMobile","GameInstructionSetting","gameSettingsAnimation","gameSettingsAnimationMobile","instructionWrapper","instructionText","instructionTextBullet","settingAnimation","columnGap","animationContainer","flexGrow","overflow","StatusBar","currentHeight","header","footer","SafeAreaView","contentContainerStyle","initialState","genreTypes","store","createStore","App"],"mappings":"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","file":"static/js/app.b71caf46.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ticket2.07abf44f.png\";","module.exports = __webpack_public_path__ + \"static/media/lose.e3488c73.wav\";","module.exports = __webpack_public_path__ + \"static/media/GameBG.ba68b791.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ScreenBG.6bc620a7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/clapper.9d2d3ccc.wav\";","module.exports = __webpack_public_path__ + \"static/media/tick.e27ee057.wav\";","module.exports = __webpack_public_path__ + \"static/media/mainAnimation.81c59b56.png\";","module.exports = __webpack_public_path__ + \"static/media/mainAnimationWeb.a2cee7f9.png\";","module.exports = __webpack_public_path__ + \"static/media/gameover.0389650d.png\";","module.exports = __webpack_public_path__ + \"static/media/gameOverMobile.6d84fc23.png\";","module.exports = __webpack_public_path__ + \"static/media/WrongAnswerScreen.ac0b66d4.png\";","module.exports = __webpack_public_path__ + \"static/media/WrongAnswerScreenMobile.89157929.png\";","module.exports = __webpack_public_path__ + \"static/media/question-page.b4f4750f.png\";","module.exports = __webpack_public_path__ + \"static/media/question-answered.9890d798.png\";","module.exports = __webpack_public_path__ + \"static/media/question-page-mobile.4ea9c670.png\";","module.exports = __webpack_public_path__ + \"static/media/question-answered-mobile.b73090a9.png\";","module.exports = __webpack_public_path__ + \"static/media/gameOverAnimationWEb.f651f500.png\";","module.exports = __webpack_public_path__ + \"static/media/gameOverAnimationMobile.a94716d6.png\";","module.exports = __webpack_public_path__ + \"static/media/oneLifeAnimationMobile.4916016d.png\";","module.exports = __webpack_public_path__ + \"static/media/oneLifeAnimationWeb.1d0eb804.png\";","module.exports = __webpack_public_path__ + \"static/media/gameStartEasy.a7dd4a58.png\";","module.exports = __webpack_public_path__ + \"static/media/gameStartEasyMobile.5d9570fe.png\";","module.exports = __webpack_public_path__ + \"static/media/gameSettingsAnimation.710878c7.gif\";","module.exports = __webpack_public_path__ + \"static/media/gameSettingMobile.b8b2c28e.gif\";","import {\n  View,\n  StyleSheet,\n  ImageBackground,\n  useWindowDimensions,\n} from \"react-native\";\nimport { connect } from \"react-redux\";\nimport GameBG from \"../Images/GamePlay/GameBG.jpg\";\nimport ScreenBG from \"../Images/GamePlay/ScreenBG.jpg\";\n\nfunction Theater({ indicators, content, buttons, scene }) {\n  const { height } = useWindowDimensions();\n\n  return (\n    <View style={styles.layout}>\n      <ImageBackground source={GameBG} style={styles.gamebg}>\n        <View style={styles.contentArea}>\n          <View style={styles.indicators}>\n            {indicators ? indicators : null}\n          </View>\n          <ImageBackground\n            source={ScreenBG}\n            style={[\n              styles.contentWrap,\n              height > 650 ? { aspectRatio: 16 / 9 } : null,\n              scene !== \"CorrectAnswer\" ? { padding: 20 } : null,\n            ]}\n          >\n            {content ? content : null}\n          </ImageBackground>\n\n          <View style={styles.buttonsContainer}>\n            {buttons ? buttons : null}\n          </View>\n        </View>\n      </ImageBackground>\n    </View>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    scene: state.scene,\n  };\n}\n\nconst styles = StyleSheet.create({\n  layout: {\n    backgroundColor: \"black\",\n    height: \"100%\",\n  },\n  gamebg: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  contentArea: {\n    width: \"90%\",\n    maxWidth: 650,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    alignSelf: \"center\",\n    marginTop: 10,\n  },\n  contentWrap: {\n    width: \"100%\",\n    backgroundColor: \"#292840\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    alignSelf: \"center\",\n  },\n  indicators: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    marginBottom: 10,\n  },\n  buttonsContainer: {\n    width: \"100%\",\n    alignItems: \"center\",\n    marginTop: 10,\n  },\n});\n\nexport default connect(mapStateToProps, null)(Theater);\n","import React, { useState, useEffect } from \"react\";\nimport {\n  View,\n  Text,\n  Pressable,\n  StyleSheet,\n  ImageBackground,\n  Platform,\n  Share,\n} from \"react-native\";\nimport { connect } from \"react-redux\";\nimport AppLoading from \"expo-app-loading\";\nimport { useFonts, Limelight_400Regular } from \"@expo-google-fonts/limelight\";\nimport { Audio } from \"expo-av\";\nimport lose from \"../Sounds/lose.wav\";\nimport Theater from \"../Layout/Theater\";\n\nfunction GameOver({\n  setScene,\n  winningStreak,\n  resetWinningStreak,\n  resetSelectedMovie,\n}) {\n  const shareMessage = `I got a streak of 🎞️${winningStreak} in Trivia & Chill!\nTest your movie knowledge here: https://luceroweb.github.io/trivia-and-chill/`;\n\n  const [sound, setSound] = useState();\n  async function playSound() {\n    const { sound } = await Audio.Sound.createAsync(lose);\n    setSound(sound);\n\n    await sound.playAsync();\n  }\n\n  const backToStartHandler = () => {\n    resetWinningStreak();\n    setScene(\"Main\");\n    resetSelectedMovie();\n  };\n\n  const shareScoreMobile = async () => {\n    try {\n      const result = await Share.share({\n        message: shareMessage,\n      });\n      if (result.action === Share.sharedAction) {\n        if (result.activityType) {\n          // shared with activity type of result.activityType\n        } else {\n          // shared\n        }\n      } else if (result.action === Share.dismissedAction) {\n        // dismissed\n      }\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  const shareScoreWeb = async () => {\n    try {\n      await navigator.clipboard.writeText(shareMessage);\n      alert(\"Message copied to clipboard!\");\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  let [fontsLoaded] = useFonts({\n    Limelight_400Regular,\n  });\n\n  useEffect(() => {\n    playSound();\n    return sound\n      ? () => {\n          sound.unloadAsync();\n        }\n      : undefined;\n  }, []);\n\n  if (!fontsLoaded) {\n    return <AppLoading />;\n  } else {\n    return (\n      <Theater\n        content={\n          <View style={{ width: \"100%\" }}>\n            <View style={styles.questionHeader}>\n              <Text style={styles.gameOverStyle}>Game Over</Text>\n            </View>\n          </View>\n        }\n        buttons={\n          <View style={styles.buttonRow}>\n            {winningStreak > 0 && Platform.OS !== \"web\" && (\n              <Pressable style={styles.buttonStyle} onPress={shareScoreMobile}>\n                <ImageBackground\n                  source={require(\"../Images/ticket.png\")}\n                  style={styles.ticket}\n                >\n                  <Text style={styles.backToStartButtonText}>Share Score</Text>\n                </ImageBackground>\n              </Pressable>\n            )}\n            {winningStreak > 0 && Platform.OS === \"web\" && (\n              <Pressable style={styles.buttonStyle} onPress={shareScoreWeb}>\n                <ImageBackground\n                  source={require(\"../Images/ticket.png\")}\n                  style={styles.ticket}\n                >\n                  <Text style={styles.backToStartButtonText}>Share Score</Text>\n                </ImageBackground>\n              </Pressable>\n            )}\n            <Pressable style={styles.buttonStyle} onPress={backToStartHandler}>\n              <ImageBackground\n                source={require(\"../Images/ticket.png\")}\n                style={styles.ticket}\n              >\n                <Text style={styles.backToStartButtonText}>Start Over</Text>\n              </ImageBackground>\n            </Pressable>\n          </View>\n        }\n      />\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    winningStreak: state.winningStreak,\n    selectedMovie: state.selectedMovie,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    resetWinningStreak: () =>\n      dispatch({\n        type: \"RESET_WINNING_STREAK\",\n      }),\n    setScene: (name) =>\n      dispatch({\n        type: \"SET_SCENE\",\n        name,\n      }),\n    resetSelectedMovie: (selectedMovie) =>\n      dispatch({\n        type: \"RESET_SELECTED_MOVIE\",\n        selectedMovie,\n      }),\n  };\n}\n\nconst styles = StyleSheet.create({\n  gameOverStyle: {\n    fontSize: 28,\n    textAlign: \"center\",\n    fontFamily: \"Limelight_400Regular\",\n    color: \"#292840\",\n  },\n  backToStartButtonText: {\n    textAlign: \"center\",\n    fontSize: 14,\n    color: \"#401323\",\n    marginBottom: 5,\n  },\n  ticket: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  buttonStyle: {\n    width: \"35%\",\n    minWidth: 120,\n    minHeight: 62,\n    aspectRatio: 7.8 / 4,\n    marginRight: 5,\n  },\n  buttonRow: {\n    flexDirection: \"row\",\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameOver);\n","\r\nimport { connect } from \"react-redux\";\r\nimport { Modal, StyleSheet, Text, View, Pressable } from \"react-native\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport { Picker } from \"@react-native-picker/picker\";\r\nconst SettingsModal = ({\r\n  scene,\r\n  gamePlayMode,\r\n  setGamePlayMode,\r\n  modalVisible,\r\n  setModalVisible,\r\n}) => {\r\n  return (\r\n    <View>\r\n      {scene === \"Question\" || scene === \"CorrectAnswer\" || scene === \"WrongAnswer\" ? (\r\n        <View></View>\r\n      ) : (\r\n        <>\r\n          <Modal\r\n            animationType=\"fade\"\r\n            transparent={true}\r\n            visible={modalVisible}\r\n            onRequestClose={() => {\r\n              setModalVisible(!modalVisible);\r\n            }}\r\n          >\r\n            <View style={styles.modalView}>\r\n            <Text style={[styles.settingHeader, styles.label]}>Settings</Text>\r\n              <Pressable\r\n                style={styles.exit}\r\n                onPress={() => setModalVisible(!modalVisible)}                \r\n              >\r\n                <AntDesign\r\n                  style={styles.exit}\r\n                  name=\"closecircle\"\r\n                  size={24}\r\n                  color=\"black\"\r\n                />\r\n              </Pressable>\r\n              {/* GameMode Picker */}\r\n              <Text style={styles.label}>Select a Game Play Mode</Text>\r\n              <Picker\r\n                style={styles.input}\r\n                selectedValue={gamePlayMode}\r\n                onValueChange={(newMode, itemIndex) => {\r\n                  setGamePlayMode(newMode);\r\n                }}\r\n              >\r\n                <Picker.Item label=\"Single Player\" value=\"singlePlayer\" />\r\n                <Picker.Item\r\n                  label=\"Easy Single Player\"\r\n                  value=\"easySinglePlayer\"\r\n                />\r\n              </Picker>\r\n            </View>\r\n          </Modal>\r\n          <Pressable onPress={() => setModalVisible(true)}>\r\n            <AntDesign name=\"setting\" size={24} color=\"#F2D379\" />\r\n          </Pressable>\r\n        </>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    scene: state.scene,\r\n    gamePlayMode: state.gamePlayMode,\r\n    modalVisible: state.modalVisible,\r\n  };\r\n}\r\n// this is how the picker tells redux that the user has selected a new player mode\r\n// so that other components that use gamePlayMode state, ex GamePlayMode.js, can update with the new player mode\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setGamePlayMode: (mode) => {\r\n      dispatch({\r\n        // type or action or action type, payload\r\n        type: \"SET_GAME_PLAY_MODE\",\r\n        gamePlayMode: mode,\r\n      });\r\n    },\r\n    setModalVisible: (visible) => {\r\n      dispatch({\r\n        type: \"SET_MODAL_VISIBLE\",\r\n        modalVisible: visible,\r\n      });\r\n    },\r\n  };\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  modalView: {\r\n    margin: 50,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 20,\r\n    paddingTop: 5,\r\n    paddingRight: 25,\r\n    paddingBottom: 25,\r\n    paddingLeft: 25,\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n    alignSelf: \"center\",\r\n  },\r\n  label: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  input: {\r\n    width: 200,\r\n    marginBottom: 10,\r\n  },\r\n  exit: {\r\n    alignSelf: \"flex-end\",\r\n    marginRight: -10,\r\n    marginTop: -12,\r\n    marginBottom: 10,\r\n  },\r\n  settingHeader: {\r\n    fontSize: 20,\r\n  }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsModal);\r\n","import { StyleSheet, View, Text, Platform } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport AppLoading from \"expo-app-loading\";\nimport { useFonts, Limelight_400Regular } from \"@expo-google-fonts/limelight\";\nimport SettingsModal from \"../Components/Header/SettingsModal\";\n\nfunction Header() {\n  let [fontsLoaded] = useFonts({\n    Limelight_400Regular,\n  });\n  if (!fontsLoaded) {\n    return <AppLoading />;\n  } else {\n    return (\n      <View style={styles.container}>\n        <Text\n          style={{\n            color: \"#F2D379\",\n            fontFamily: \"Limelight_400Regular\",\n            fontSize: 30,\n          }}\n        >\n          Trivia & Chill\n        </Text>\n        <View style={{ position: \"absolute\", top: 7, right: 6 }}>\n          <SettingsModal />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    // backgroundColor: \"#EEF525\",\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderBottomWidth: 3,\n    borderColor: \"#F2D379\",\n    backgroundColor: \"#401323\",\n  },\n  movieGame: {\n    fontSize: 60,\n    textAlign: \"center\",\n    fontFamily: \"Limelight_400Regular\",\n    color: \"#F2D379\",\n  },\n  movieGameMobile: {\n    fontSize: 40,\n    marginBottom: 70,\n    textAlign: \"center\",\n    fontFamily: \"Limelight_400Regular\",\n    color: \"#F2D379\",\n  },\n\n  movieGameMini: {\n    fontSize: 24,\n    marginBottom: Platform.OS === \"android\" ? 20 : 70,\n    textAlign: \"center\",\n    fontFamily: \"Limelight_400Regular\",\n    color: \"#F2D379\",\n  },\n});\n\nexport default connect()(Header);\n","import axios from \"axios\";\n\nexport default async function FetchApi() {\n  let moviesResponse = await axios.all([...Array(10)].map((item, index) =>{\n    return axios\n    .get(\n      `https://api.themoviedb.org/3/movie/popular?api_key=59a35a38a15babb3dad4e83c83a72748&language=en-US&page=${index + 1}`\n    )\n    .then((res) => (moviesResponse = res.data.results))\n    .catch((err) => console.log(err.response.data));\n\n  }));\n  let moviesList = []\n  moviesResponse.forEach((movieList) => {\n    moviesList = moviesList.concat(movieList)\n  });\n\n  return moviesList;\n}\n\nexport async function getPerformerName(movieId) {\n  let credits = await axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=59a35a38a15babb3dad4e83c83a72748&language=en-US`\n    )\n    .catch((err) => console.log(err));\n  return credits;\n}\n\nexport async function getMovieChanges(movieId) {\n  let details = await axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${movieId}/changes?api_key=59a35a38a15babb3dad4e83c83a72748&language=en-US`\n    )\n    .catch((err) => console.log(err));\n  return details;\n}\n\nexport async function getYouTubeId(movieId) {\n  let youTubeId = null;\n\n  await axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${movieId}/videos?api_key=59a35a38a15babb3dad4e83c83a72748&language=en-US`\n    )\n    .then((response) => (youTubeId = response.data?.results[0]?.key || null))\n    .catch((err) => console.log(\"Fetch API Error\", err));\n\n  return youTubeId;\n}\n\nexport async function getGenreName(genreId) {\n  let matchGenre = null;\n\n  await axios\n    .get(\n      `https://api.themoviedb.org/3/genre/movie/list?api_key=59a35a38a15babb3dad4e83c83a72748&language=en-US`\n    )\n    .then((response) => {\n      matchGenre = response.data.genres.filter((genre) => genre.id === genreId);\n      matchGenre = matchGenre[0].name;\n    })\n    .catch((err) => console.log(\"Fetch API Error\", err));\n\n  return matchGenre;\n}\n\nexport async function getGenre(genreId) {\n  let matchGenre = null;\n\n  const genreTypes = await axios\n    .get(\n      `https://api.themoviedb.org/3/genre/movie/list?api_key=59a35a38a15babb3dad4e83c83a72748&language=en-US`\n    )\n    .catch((err) => console.log(\"Fetch API Error\", err));\n\n  return genreTypes;\n}\n","import { useState, useEffect, useRef } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  Image,\n  Pressable,\n  ImageBackground,\n  Animated,\n  Platform,\n  useWindowDimensions,\n} from \"react-native\";\nimport { Audio } from \"expo-av\";\nimport clapper from \"../Sounds/clapper.wav\";\nimport { connect } from \"react-redux\";\nimport FetchApi from \"../Utils/FetchApi\";\nimport { useFonts, Limelight_400Regular } from \"@expo-google-fonts/limelight\";\nimport AppLoading from \"expo-app-loading\";\n\nfunction Main({ setScene, setMovies }) {\n  const clapperOpenFade = useRef(new Animated.Value(1)).current;\n  const clapperClosedFade = useRef(new Animated.Value(0)).current;\n  const textFade = useRef(new Animated.Value(0)).current;\n  const boardWithTextFade = useRef(new Animated.Value(0)).current;\n  const [sound, setSound] = useState();\n\n  const { width, height } = useWindowDimensions();\n  useEffect(() => {\n    FetchApi().then((res) => setMovies(res));\n  }, []);\n\n  async function playSound() {\n    const { sound } = await Audio.Sound.createAsync(clapper, { volume: 0.1 });\n    setSound(sound);\n\n    await sound.playAsync();\n  }\n\n  let delay;\n\n  if (Platform.OS === \"web\") {\n    delay = 1900;\n  } else {\n    delay = 1600;\n  }\n\n  useEffect(() => {\n    let timeout = setTimeout(() => {\n      playSound();\n    }, delay);\n    Animated.parallel([\n      Animated.timing(boardWithTextFade, {\n        toValue: 1,\n        duration: 3740,\n        useNativeDriver: false,\n      }),\n      Animated.stagger(1897, [\n        Animated.timing(clapperOpenFade, {\n          toValue: 0,\n          duration: 0,\n          delay: 1900,\n          useNativeDriver: false,\n        }),\n        Animated.timing(clapperClosedFade, {\n          toValue: 1000,\n          duration: 2000,\n          useNativeDriver: false,\n        }),\n        Animated.timing(textFade, {\n          toValue: 1,\n          delay: 800,\n          duration: 4000,\n          useNativeDriver: false,\n        }),\n      ]),\n    ]).start();\n    return () => clearTimeout(timeout);\n  }, []);\n\n  let titleFontSize = width / 8.5 > 110 ? 110 : width / 8.5;\n  let buttonSize = width * 0.3 > 200 ? 200 : width * 0.3;\n  let backgroundHeight = height * 0.7 > 600 ? 600 : height * 0.7;\n  let spacerHeight = height / 3 > 300 ? 300 : height / 3.3;\n  let clapperWidth = width * 0.85;\n\n  // For edge cases\n  // For Galaxy Fold in landscape\n  if (height < 300) {\n    titleFontSize = height / 10;\n    backgroundHeight = height * 0.55;\n    spacerHeight = height / 4;\n    buttonSize = width * 0.1;\n    clapperWidth = height * 0.8;\n// Primarily for iPhone SE in Landscape\n  } else if (height < 800 && width > 550) {\n    titleFontSize = height / 8;\n    buttonSize = height / 4;\n    clapperWidth = height * 0.8;\n    if (height < 700) {\n      backgroundHeight = height * 0.65;\n    }\n  }\n\n  let [fontsLoaded] = useFonts({ Limelight_400Regular });\n  if (!fontsLoaded) {\n    return <AppLoading />;\n  } else {\n    return (\n      <View\n        style={[\n          styles.container,\n          { backgroundColor: width < 600 ? \"#100307\" : \"black\" },\n        ]}\n      >\n        <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n          <ImageBackground\n            style={[\n              styles.backgroundPicture,\n              {\n                height: backgroundHeight,\n              },\n            ]}\n            source={require(\"../Images/Main/IntroAnimation/marqueeBackground.png\")}\n            alt=\"movie theatre with marquee sign with cars parked in front\"\n          >\n            {/* Animated View for picture of open clapper with no text */}\n            <Animated.View\n              style={[\n                styles.clapperViews,\n                {\n                  opacity: clapperOpenFade,\n                  alignItems: width < 600 ? \"center\" : \"stretch\",\n                },\n              ]}\n            >\n              <Image\n                style={[\n                  styles.introImages,\n                  {\n                    width: clapperWidth,\n                    maxWidth: width * 0.9 < 672 ? width * 0.9 : 672,\n                  },\n                ]}\n                source={require(\"../Images/Main/IntroAnimation/clapper2-open.png\")}\n                alt=\"open movie clapper\"\n                resizeMode=\"contain\"\n              />\n            </Animated.View>\n            {/* Animated View for clapper image with arm closed with no text */}\n            <Animated.View\n              style={[\n                styles.clapperViews,\n                {\n                  opacity: clapperClosedFade.interpolate({\n                    inputRange: [0, 0.0001, 500, 1000],\n                    outputRange: [0, 1, 1, 0],\n                  }),\n                  alignItems: width < 600 ? \"center\" : \"stretch\",\n                },\n              ]}\n            >\n              <Image\n                style={[\n                  styles.introImages,\n                  {\n                    width: clapperWidth,\n                    maxWidth: width * 0.9 < 672 ? width * 0.9 : 672,\n                  },\n                ]}\n                source={require(\"../Images/Main/IntroAnimation/clapper2-closed.png\")}\n                alt=\"closed movie clapper\"\n                resizeMode=\"contain\"\n              />\n            </Animated.View>\n            {/* Animated View for clapper board with actual text in foreground */}\n            <Animated.View\n              style={[\n                styles.clapperViews,\n                {\n                  opacity: boardWithTextFade.interpolate({\n                    inputRange: [0, 0.8, 1],\n                    outputRange: [1, 1, 0],\n                  }),\n                  alignItems: width < 600 ? \"center\" : \"stretch\",\n                  zIndex: 2,\n                },\n              ]}\n            >\n              <Image\n                style={[\n                  styles.introImages,\n                  {\n                    width: clapperWidth,\n                    maxWidth: width * 0.9 < 672 ? width * 0.9 : 672,\n                  },\n                ]}\n                source={require(\"../Images/Main/IntroAnimation/clapper2-no-arm-arial-revised.png\")}\n                alt=\"closed movie clapper\"\n                resizeMode=\"contain\"\n              />\n            </Animated.View>\n          </ImageBackground>\n\n          {/* Animated View for the fading in title and start button */}\n          <Animated.View\n            style={[\n              {\n                opacity: textFade,\n              },\n              styles.titleAndButtonContainer,\n            ]}\n          >\n            <Text\n              style={[\n                styles.fontText,\n                {\n                  fontSize: titleFontSize,\n                },\n              ]}\n            >\n              Trivia &#38; Chill\n            </Text>\n            {/*following View is a spacer necessary because of complications on android within an Animated.View */}\n            <View style={{ height: spacerHeight }}></View>\n            <Pressable onPress={() => setScene(\"Question\")}>\n              <ImageBackground\n                source={require(\"../Images/ticket.png\")}\n                style={[styles.ticket, { width: buttonSize }]}\n              >\n                <Text style={styles.buttonText}>Start</Text>\n              </ImageBackground>\n            </Pressable>\n          </Animated.View>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  backgroundPicture: {\n    flexDirection: \"column\",\n    aspectRatio: 672 / 500,\n    justifyContent: \"center\",\n    shadowColor: \"#c9195468\",\n    shadowOpacity: 0.9,\n    shadowRadius: 300,\n    marginTop: 30,\n    marginBottom: 30,\n  },\n  clapperViews: {\n    position: \"absolute\",\n    alignSelf: \"center\",\n  },\n  introImages: {\n    aspectRatio: 1280 / 1117,\n  },\n  fontText: {\n    fontFamily: \"Limelight_400Regular\",\n    textAlign: \"center\",\n    color: \"#F2D379\",\n  },\n  background: {\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    top: 0,\n    height: \"100%\",\n  },\n  titleAndButtonContainer: {\n    position: \"absolute\",\n  },\n  ticket: {\n    marginTop: 10,\n    flex: 1,\n    marginBottom: 10,\n    width: 200,\n    aspectRatio: 18 / 9,\n    alignSelf: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setScene: (name) =>\n      dispatch({\n        type: \"SET_SCENE\",\n        name,\n      }),\n    setMovies: (movies) =>\n      dispatch({\n        type: \"SET_MOVIES\",\n        movies,\n      }),\n    setPerformerName: (performerName) =>\n      dispatch({\n        type: \"SET_PERFORMER_NAME\",\n        performerName,\n      }),\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(Main);\n","import { StyleSheet, View, Text, Pressable, Platform } from \"react-native\";\nimport { connect } from \"react-redux\";\n\nfunction Footer({ setScene }) {\n  return (\n    <View style={styles.container}>\n      <Pressable onPress={() => setScene(\"Credits\")}>\n        <Text style={styles.textColor}>Credits</Text>\n      </Pressable>\n      <Text style={styles.textColor}> | </Text>\n      <Pressable onPress={() => setScene(\"About\")}>\n        <Text style={styles.textColor}>{Platform.OS === 'ios' ? \" \" : \"\"}About</Text>\n      </Pressable>\n      <Text style={styles.textColor}> | </Text>\n      <Pressable onPress={() => setScene(\"HowToPlay\")}>\n        <Text style={styles.textColor}>{Platform.OS === 'ios' ? \" \" : \"\"}How To Play</Text>\n      </Pressable>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderTopWidth: 3,\n    padding: 5,\n    borderColor: \"#F2D379\",\n    backgroundColor: \"#401323\",\n    flexDirection: \"row\",\n  },\n  textColor: {\n    color: \"#F2D379\",\n    fontSize: 20,\n    textAlign: \"center\",\n  },\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setScene: (name) =>\n      dispatch({\n        type: \"SET_SCENE\",\n        name,\n      }),\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(Footer);\n","export default function madLibsArray(movies) {\n  let year = movies.release_date.substr(0, 4);\n  let month = movies.release_date.substr(5, 2);\n  let day = movies.release_date.substr(8, 2);\n\n  if (day < 10) {\n    day = day[1];\n  }\n\n  if (month < 10) {\n    month = month[1];\n  }\n\n  let months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  let movieDate = `${months[month - 1]} ${day}, ${year}`;\n\n  function generateRandomDate() {\n    return new Date(+new Date() - Math.floor(Math.random() * 100000000000));\n  }\n\n  function generateRandomCastNumber() {\n    let randomCast = movies.cast;\n    return randomCast[Math.floor(Math.random() * randomCast.length)];\n  }\n\n  const randomCast1 = generateRandomCastNumber();\n  const randomCast2 = generateRandomCastNumber();\n\n  return (\n    movies && [\n      {\n        question: `${movies.title}'s cast included ${randomCast1.name} and ${randomCast2.name}.`,\n        answer:\n          randomCast1.known_for_department === \"Acting\" &&\n          randomCast2.known_for_department === \"Acting\"\n            ? true\n            : false,\n        movieId: `${movies.id}`,\n      },\n      {\n        question: `${movies.title} was released on ${movieDate}.`, //movie details\n        answer: true,\n        movieId: `${movies.id}`,\n      },\n      {\n        question: `${movieDate} was the release date of ${movies.title}.`,\n        answer: true,\n        movieId: `${movies.id}`,\n      },\n      // {\n      //   question: `${movies.overview} describes what ${movies.title} is about.`,\n      //   answer: true,\n      //   movieId: `${movies.id}`,\n      // },\n      // {\n      //   question: `${movies.title} is a movie about \"${movies.overview}\"`,\n      //   answer: true,\n      //   movieId: `${movies.id}`,\n      // },\n      {\n        question: `${randomCast1.name} starred in ${movies.title}.`, //get credits endpoint for performer name\n        answer: randomCast1.known_for_department === \"Acting\" ? true : false,\n        movieId: `${movies.id}`,\n      },\n      {\n        question: `${movies.title}'s cast included ${randomCast1.name} .`, //get credits endpoint for performer name\n        answer: randomCast1.known_for_department === \"Acting\" ? true : false,\n        movieId: `${movies.id}`,\n      },\n      {\n        question: `September 2, 1996 was the release date of Scream.`,\n        answer: false,\n        movieId: 4232,\n      },\n      {\n        question: `\"A brillant and gifted young man must find the most beautiful location on the planet to set up a new vacation home for his family.\" describes what the movie Dune is about.`,\n        answer: false,\n        movieId: 438631,\n      },\n      {\n        question: `Aladdin is a movie about a young man in search of a magic carpet.`,\n        answer: false,\n        movieId: 812,\n      },\n      {\n        question: `La La Land's plot used to be described as \"Two lovers are drawn together by their desire to do what is right.  They are faced with a growing need to dance into the night.\"`,\n        answer: false,\n        movieId: 313369,\n      },\n      {\n        question: `When was ${movies.title} was released on?`, //movie details\n        answer: [\n          `${movies.release_date}`,\n          `${new generateRandomDate().toLocaleDateString(\"en-US\")}`,\n          `${new generateRandomDate().toLocaleDateString(\"en-US\")}`,\n        ],\n        movieId: `${movies.id}`,\n      },\n      {\n        question: `${movies.title} was released when?`, //movie details\n        answer: [\n          `${movies.release_date}`,\n          `${new generateRandomDate().toLocaleDateString(\"en-US\")}`,\n          `${new generateRandomDate().toLocaleDateString(\"en-US\")}`,\n        ],\n        movieId: `${movies.id}`,\n      },\n      {\n        question: `What was the release date of the ${movies.title}?`, //movie details\n        answer: [\n          `${movies.release_date}`,\n          `${new generateRandomDate().toLocaleDateString(\"en-US\")}`,\n          `${new generateRandomDate().toLocaleDateString(\"en-US\")}`,\n        ],\n        movieId: `${movies.id}`,\n      },\n      {\n        question: `${movies.title} was released on what date?`, //movie details\n        answer: [\n          `${movies.release_date}`,\n          `${new generateRandomDate().toLocaleDateString(\"en-US\")}`,\n          `${new generateRandomDate().toLocaleDateString(\"en-US\")}`,\n        ],\n        movieId: `${movies.id}`,\n      },\n      {\n        question: `When did ${movies.title} come out?`, //movie details\n        answer: [\n          `${movies.release_date}`,\n          `${new generateRandomDate().toLocaleDateString(\"en-US\")}`,\n          `${new generateRandomDate().toLocaleDateString(\"en-US\")}`,\n        ],\n        movieId: `${movies.id}`,\n      },\n      {\n        question: `What was the release date of ${movies.title}?`, //movie details\n        answer: [\n          `${movies.release_date}`,\n          `${new generateRandomDate().toLocaleDateString(\"en-US\")}`,\n          `${new generateRandomDate().toLocaleDateString(\"en-US\")}`,\n        ],\n        movieId: `${movies.id}`,\n      },\n      {\n        question: `Ghostbusters was released on May 12, 1987.`,\n        answer: false,\n        movieId: 620,\n      },\n      // {\n      //   question: `${movies.title}'s plot is described as \"${movies.overview}\"`,\n      //   answer: true,\n      //   movieId: `${movies.id}`,\n      // },\n      {\n        question: `${movies.title} is considered a ${movies.genre}`,\n        answer: true,\n        movieId: `${movies.id}`,\n      },\n      {\n        question: `${movies.title} is categorized under the ${movies.genre} genre.`,\n        answer: true,\n        movieId: `${movies.id}`,\n      },\n      // {\n      //   question: `\"${movies.overview}\" was the original plot of ${movies.title}.`,\n      //   answer: true,\n      //   movieId: `${movies.id}`,\n      // },\n      {\n        question: `Kill Bill is a romantic comedy.`,\n        answer: false,\n        movieId: 24,\n      },\n      {\n        question: `Captain America is categorized under the musicals genre.`,\n        answer: false,\n        movieId: 1771,\n      },\n      // {\n      //   question: `Encanto's plot used to be described as \"The Luceros are an extraordinary family who live hidden in the mountains of Mexico in a charmed place called the Encanto. The magic of the Encanto has blessed every child in the family with a unique gift -- every child except Miranda\"`,\n      //   answer: false,\n      //   movieId: 568124,\n      // },\n      // {\n      //   question: `Deformed since birth, a bitter man known only as the Phantom lives in the sewers underneath the Marid Opera House. He falls in love with the obscure chorus singer Christine, and privately tutors her while terrorizing the rest of the opera house and demanding Christine be given lead roles. Things get worse when Christine meets back up with her childhood acquaintance Raoul and the two fall in love`,\n      //   answer: false,\n      //   movieId: 9833,\n      // },\n      // {\n      //   question: `George and Kevin are two men whose stupidity is really indescribable. When Martha, a beautiful woman, loses an important suitcase with money before she leaves for Miami, the two friends (who have found the suitcase) decide to return it to her. After some \"adventures\" they finally get to Aspen where, using the lost money they live it up and fight for Mary's heart.`,\n      //   answer: false,\n      //   movieId: 8467,\n      // },\n      {\n        question: `Denzel Washington was in the movie Dude, Where's My Car?`,\n        answer: false,\n        movieId: 8859,\n      },\n      {\n        question: `Kristen Stewart was in Fight Club`,\n        answer: false,\n        movieId: 550,\n      },\n      {\n        question: `Olivia Munn starred in Ron's Gone Wrong`,\n        answer: false,\n        movieId: 482321,\n      },\n      {\n        question: `Ashton Kutcher starred in Grown Ups`,\n        answer: false,\n        movieId: 38365,\n      },\n    ]\n  );\n}\n","const RandomGenerator = (length) => {\r\n\r\n  const randomNumber = Math.floor(Math.random() * length);\r\n\r\n  return randomNumber;\r\n}\r\n\r\nexport default RandomGenerator\r\n\r\n","import React, { useEffect } from \"react\";\r\nimport { View, Alert } from \"react-native\";\r\nimport madLibsArray from \"../../Utils/madLibsArray\";\r\nimport RandomGenerator from \"../../Utils/RandomGenerator\";\r\nimport { getGenreName, getPerformerName } from \"../../Utils/FetchApi\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { Platform } from \"expo-modules-core\";\r\n\r\nconst GenerateQuestion = ({ movies, setSelectedMovie, setScene }) => {\r\n  const hasValidValues = (valuesList) =>\r\n    valuesList.every((value) => {\r\n      if (Array.isArray(value)) {\r\n        if (value.length === 0) {\r\n          return false;\r\n        } else {\r\n          return hasValidValues(value);\r\n        }\r\n      } else if (typeof value === \"object\" && value !== null) {\r\n        return hasValidValues(Object.values(value));\r\n      } else if (typeof value === \"undefined\" || value === \"\") {\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n\r\n  useEffect(() => {\r\n    const generateQuestionAndCheckUndefined = async () => {\r\n      let count = 0;\r\n      let isValid = false;\r\n      let newMovie = await fetchNewMovie();\r\n\r\n      while (!isValid && count < 2) {\r\n        const movieQueryValues = Object.values(newMovie);\r\n        isValid = hasValidValues(movieQueryValues);\r\n        if (!isValid) {\r\n          newMovie = await fetchNewMovie();\r\n          count++;\r\n        }\r\n      }\r\n\r\n      if (count >= 2) {\r\n        if (Platform.OS === \"web\") {\r\n          alert(`ERROR: Found too much missing data.\r\nPress OK to return to the main screen.`);\r\n          setScene(\"Main\");\r\n        } else {\r\n          Alert.alert(\r\n            \"ERROR: Found too much missing data.\",\r\n            \"Press OK to return to the main screen.\",\r\n            [\r\n              {\r\n                text: \"OK\",\r\n                onPress: () => setScene(\"Main\"),\r\n              },\r\n            ]\r\n          );\r\n        }\r\n      } else {\r\n        let questionObject = madLibsArray(newMovie);\r\n        let randomIndex = RandomGenerator(questionObject.length);\r\n        setSelectedMovie(questionObject[randomIndex]);\r\n      }\r\n    };\r\n\r\n    const fetchNewMovie = async () => {\r\n      let movie = movies ? movies[RandomGenerator(movies.length)] : [];\r\n\r\n      return await axios\r\n        .all([getPerformerName(movie.id), getGenreName(movie.genre_ids[0])])\r\n        .then(\r\n          axios.spread((castRes, genreRes) => {\r\n            return {\r\n              ...movie,\r\n              cast: castRes.data.cast.slice(0, 10),\r\n              genre: genreRes,\r\n            };\r\n          })\r\n        );\r\n    };\r\n\r\n    generateQuestionAndCheckUndefined();\r\n  }, []);\r\n\r\n  return <View></View>;\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    selectedMovie: state.selectedMovie,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setSelectedMovie: (selectedMovie) =>\r\n      dispatch({\r\n        type: \"SET_SELECTED_MOVIE\",\r\n        selectedMovie,\r\n      }),\r\n    setScene: (name) =>\r\n      dispatch({\r\n        type: \"SET_SCENE\",\r\n        name,\r\n      }),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GenerateQuestion);\r\n","import { Text, View, StyleSheet, Platform } from \"react-native\";\r\nimport { CountdownCircleTimer } from \"react-native-countdown-circle-timer\";\r\n\r\nexport default function Clock({ isPlaying, onUpdate, onComplete }) {\r\n  return (\r\n    <View style={styles.container}>\r\n      <CountdownCircleTimer\r\n        isPlaying={isPlaying}\r\n        duration={10}\r\n        colors={[\"#F2D379\", \"#CA3D45\"]}\r\n        colorsTime={[10, 0]}\r\n        onComplete={onComplete}\r\n        size={50}\r\n        strokeWidth={6}\r\n        trailColor={\"#CA3D45\"}\r\n        onUpdate={onUpdate}\r\n      >\r\n        {({ remainingTime, color }) => (\r\n          <Text style={{ color: \"#F2D379\", fontSize: 20 }}>\r\n            {remainingTime}\r\n          </Text>\r\n        )}\r\n      </CountdownCircleTimer>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    // paddingTop: Constants.statusBarHeight,\r\n    padding: 4,\r\n  },\r\n});\r\n","import { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Audio } from \"expo-av\";\nimport tick from \"../../Sounds/tick.wav\";\nimport Clock from \"./Clock\";\nimport { StyleSheet, View, Platform } from \"react-native\";\n\nfunction Timer({ setScene }) {\n  const [sound, setSound] = useState();\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  async function handleClockUpdate(remainingTime) {\n    if (sound && remainingTime > 0) {\n      await sound.replayAsync();\n    }\n  }\n\n  function handleClockComplete() {\n    setScene(\"GameOver\");\n  }\n\n  useEffect(() => {\n    const loadSound = async () => {\n      try {\n        const { sound } = await Audio.Sound.createAsync(tick);\n        await sound.playAsync();\n        setIsPlaying(true);\n        setSound(sound);\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    loadSound();\n    return () => {\n      sound ? sound.unloadAsync() : undefined;\n    };\n  }, []);\n\n  return (\n    <View style={styles.timer}>\n      <Clock\n        isPlaying={isPlaying}\n        onUpdate={handleClockUpdate}\n        onComplete={handleClockComplete}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  timer: {\n    position: \"relative\",\n  },\n});\n\nfunction mapStateToProps(state) {\n  return {\n    scene: state.scene,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setScene: (name) =>\n      dispatch({\n        type: \"SET_SCENE\",\n        name,\n      }),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);\n","import { useState } from \"react\";\nimport {\n  TouchableOpacity,\n  StyleSheet,\n  Text,\n  View,\n  ImageBackground,\n  Platform,\n  useWindowDimensions,\n} from \"react-native\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nconst TrueFalse = ({\n  selectedMovie,\n  setScene,\n  increaseWinningStreak,\n  lives,\n  gamePlayMode,\n  decreaseLives,\n  resetLives,\n}) => {\n  const [selectedAnswer, setSelectedAnswer] = useState();\n  const [hasAnswered, setHasAnswered] = useState(false);\n  const answer = selectedMovie?.answer;\n  const { width } = useWindowDimensions();\n\n  const isCorrect = (selection) => {\n    if (hasAnswered) {\n      return;\n    }\n    setHasAnswered(true);\n    setSelectedAnswer(selection);\n\n    if (selection === answer) {\n      setTimeout(() => {\n        increaseWinningStreak();\n        setScene(\"CorrectAnswer\");\n      }, 1000);\n    } else if (gamePlayMode === \"easySinglePlayer\" && lives > 1) {\n      setTimeout(() => {\n        decreaseLives();\n        setScene(\"WrongAnswer\");\n      }, 1000);\n    } else {\n      setTimeout(() => {\n        resetLives();\n        setScene(\"GameOver\");\n        resetLives();\n      }, 1000);\n    }\n  };\n  const getIcon = (button) => {\n    if (typeof selectedAnswer === \"undefined\") {\n      return <FontAwesome name=\"star\" size={12} color=\"#401323\" />;\n    }\n    if (button !== answer) {\n      return <FontAwesome name=\"close\" size={16} color=\"#CA3D45\" />;\n    }\n    if (button === answer) {\n      return <FontAwesome name=\"check\" size={16} color=\"green\" />;\n    }\n  };\n  const getColorT = (button) => {\n    if (typeof selectedAnswer === \"undefined\") {\n      return (\n        <Text\n          style={{\n            marginRight: 20,\n            marginLeft: 20,\n            textDecorationLine: \"none\",\n            color: \"black\",\n          }}\n        >\n          True{\" \"}\n        </Text>\n      );\n    }\n    if (button !== answer) {\n      return (\n        <Text\n          style={{\n            marginRight: 20,\n            marginLeft: 20,\n            textDecorationLine: \"line-through\",\n            color: \"red\",\n          }}\n        >\n          True{\" \"}\n        </Text>\n      );\n    }\n    if (button === answer) {\n      return (\n        <Text\n          style={{\n            marginRight: 20,\n            marginLeft: 20,\n            textDecorationLine: \"none\",\n            color: \"green\",\n          }}\n        >\n          True{\" \"}\n        </Text>\n      );\n    }\n  };\n  const getColorF = (button) => {\n    if (typeof selectedAnswer === \"undefined\") {\n      return (\n        <Text\n          style={{\n            marginRight: 20,\n            marginLeft: 20,\n            textDecorationLine: \"none\",\n            color: \"black\",\n          }}\n        >\n          False{\" \"}\n        </Text>\n      );\n    }\n    if (button !== answer) {\n      return (\n        <Text\n          style={{\n            marginRight: 20,\n            marginLeft: 20,\n            textDecorationLine: \"line-through\",\n            color: \"red\",\n          }}\n        >\n          False{\" \"}\n        </Text>\n      );\n    }\n    if (button === answer) {\n      return (\n        <Text\n          style={{\n            marginRight: 20,\n            marginLeft: 20,\n            textDecorationLine: \"none\",\n            color: \"green\",\n          }}\n        >\n          False{\" \"}\n        </Text>\n      );\n    }\n  };\n  const getTextDecoration = (button) => {\n    if (typeof selectedAnswer === \"undefined\") {\n      return \"none\";\n    }\n    if (button !== answer) {\n      return \"line-through\";\n    }\n  };\n\n  return (\n    <View\n      style={[\n        styles.container,\n        { flexDirection: width > 500 ? \"row\" : \"column\" },\n      ]}\n    >\n      <View style={styles.true}>\n        <ImageBackground\n          source={require(\"../../Images/ticket2.png\")}\n          style={styles.ticket}\n        >\n          <TouchableOpacity\n            onPress={() => isCorrect(true)}\n            style={styles.ticketOption}\n          >\n            {getIcon(true)}\n            {getColorT(true)}\n            {getIcon(true)}\n          </TouchableOpacity>\n        </ImageBackground>\n      </View>\n      <View style={styles.false}>\n        <ImageBackground\n          source={require(\"../../Images/ticket2.png\")}\n          style={styles.ticket}\n        >\n          <TouchableOpacity\n            onPress={() => isCorrect(false)}\n            style={styles.ticketOption}\n          >\n            {getIcon(false)}\n            {getColorF(false)}\n            {getIcon(false)}\n          </TouchableOpacity>\n        </ImageBackground>\n      </View>\n    </View>\n  );\n};\nconst mapStateToProps = (state) => ({\n  questions: state.questions,\n  selectedMovie: state.selectedMovie,\n  lives: state.lives,\n  gamePlayMode: state.gamePlayMode || \"easySinglePlayer\",\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setScene: (name) =>\n      dispatch({\n        type: \"SET_SCENE\",\n        name,\n      }),\n    increaseWinningStreak: () =>\n      dispatch({\n        type: \"INCREASE_WINNING_STREAK\",\n      }),\n    decreaseLives: () =>\n      dispatch({\n        type: \"DECREASE_LIVES\",\n      }),\n    resetLives: () =>\n      dispatch({\n        type: \"RESET_LIVES\",\n      }),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TrueFalse);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 20,\n    margin: Platform.OS === \"android\" ? 1 : 4,\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  true: {\n    marginBottom: 5,\n  },\n  false: {\n    marginBottom: 5,\n  },\n  ticket: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: 160,\n    height: 80,\n  },\n  ticketOption: {\n    flex: 1,\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    width: \"90%\",\n    height: 80,\n    flexDirection: \"row\",\n  },\n});\n","import { useState, useEffect } from \"react\";\nimport {\n  TouchableOpacity,\n  StyleSheet,\n  Text,\n  View,\n  ImageBackground,\n  useWindowDimensions,\n  Platform,\n} from \"react-native\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nconst MultipleChoice = ({\n  selectedMovie,\n  setScene,\n  increaseWinningStreak,\n  lives,\n  gamePlayMode,\n  decreaseLives,\n  resetLives,\n}) => {\n  const [multipleAnswer, setMultipleAnswer] = useState(selectedMovie?.answer);\n  const [correctAnswer, setCorrectAnswer] = useState(\"\");\n  const [selectedAnswer, setSelectedAnswer] = useState();\n  const [runRandom, setRunRandom] = useState(true);\n  const [hasAnswered, setHasAnswered] = useState(false);\n  const { width } = useWindowDimensions();\n\n  const randomizeAnswer = (array) => {\n    let currentIndex = array.length;\n    while (currentIndex != 0) {\n      const randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex],\n        array[currentIndex],\n      ];\n    }\n  };\n\n  useEffect(() => {\n    setCorrectAnswer(multipleAnswer[0]);\n\n    if (runRandom) {\n      randomizeAnswer(multipleAnswer);\n    }\n  }, [multipleAnswer]);\n\n  const isCorrect = (selection) => {\n    if (hasAnswered) {\n      return;\n    }\n    setHasAnswered(true);\n    setRunRandom(false);\n    setSelectedAnswer(selection);\n    if (selection === correctAnswer) {\n      setTimeout(() => {\n        increaseWinningStreak();\n        setScene(\"CorrectAnswer\");\n      }, 1000);\n    } else if (gamePlayMode === \"easySinglePlayer\" && lives > 1) {\n      setTimeout(() => {\n        decreaseLives();\n        setScene(\"WrongAnswer\");\n      }, 1000);\n    } else {\n      setTimeout(() => {\n        resetLives();\n        setScene(\"GameOver\");\n      }, 1000);\n    }\n  };\n\n  const getIcon = (selection) => {\n    if (typeof selectedAnswer === \"undefined\") {\n      return <FontAwesome name=\"star\" size={12} color=\"#401323\" />;\n    } else if (selection === correctAnswer) {\n      return <FontAwesome name=\"check\" size={16} color=\"green\" />;\n    } else {\n      return <FontAwesome name=\"close\" size={16} color=\"#CA3D45\" />;\n    }\n  };\n\n  const getColor = (selection) => {\n    if (typeof selectedAnswer === \"undefined\") {\n      return styles.colorU;\n    } else if (selection === correctAnswer) {\n      return styles.colorT;\n    } else {\n      return styles.colorF;\n    }\n  };\n\n  return (\n    <View\n      style={[\n        styles.container,\n        { flexDirection: width > 500 ? \"row\" : \"column\" },\n      ]}\n    >\n      {multipleAnswer.map((item, index) => (\n        <ImageBackground\n          source={require(\"../../Images/ticket2.png\")}\n          style={styles.ticket}\n          key={index}\n        >\n          <TouchableOpacity\n            key={index}\n            onPress={() => isCorrect(item)}\n            style={styles.ticketOption}\n          >\n            {getIcon(item)}\n            <Text style={getColor(item)}>{item}</Text>\n            {getIcon(item)}\n          </TouchableOpacity>\n        </ImageBackground>\n      ))}\n    </View>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  questions: state.questions,\n  selectedMovie: state.selectedMovie,\n  lives: state.lives,\n  gamePlayMode: state.gamePlayMode || \"easySinglePlayer\",\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setScene: (name) =>\n      dispatch({\n        type: \"SET_SCENE\",\n        name,\n      }),\n    increaseWinningStreak: () =>\n      dispatch({\n        type: \"INCREASE_WINNING_STREAK\",\n      }),\n    decreaseLives: () =>\n      dispatch({\n        type: \"DECREASE_LIVES\",\n      }),\n    resetLives: () =>\n      dispatch({\n        type: \"RESET_LIVES\",\n      }),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MultipleChoice);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 20,\n    margin: Platform.OS === \"android\" ? 1 : 4,\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  ticket: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: 160,\n    height: 80,\n    marginBottom: 5,\n  },\n  ticketOption: {\n    flexDirection: \"row\",\n    width: \"90%\",\n    height: 80,\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n  },\n  colorT: {\n    marginRight: 5,\n    marginLeft: 5,\n    textDecorationLine: \"none\",\n    color: \"green\",\n  },\n  colorF: {\n    marginRight: 5,\n    marginLeft: 5,\n    textDecorationLine: \"line-through\",\n    color: \"red\",\n  },\n  colorU: {\n    marginRight: 5,\n    marginLeft: 5,\n    textDecorationLine: \"none\",\n    color: \"black\",\n  },\n});\n","import { StyleSheet, View, Text } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { SimpleLineIcons } from \"@expo/vector-icons\";\n// import { useState } from 'react';\n\nfunction Badge({ winningStreak }) {\n  return (\n    <View style={styles.badgeDisplay}>\n      {winningStreak > 0 && (\n        <View style={styles.badgeWrap}>\n          <View style={styles.badge}>\n            <SimpleLineIcons name=\"film\" size={35} color=\"#F2D379\" />\n            <Text style={styles.badgeText}>{winningStreak}</Text>\n          </View>\n        </View>\n      )}\n    </View>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    winningStreak: state.winningStreak,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    increaseWinningStreak: () =>\n      dispatch({\n        type: \"INCREASE_WINNING_STREAK\",\n      }),\n    resetWinningStreak: () =>\n      dispatch({\n        type: \"RESET_WINNING_STREAK\",\n      }),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Badge);\n\nconst styles = StyleSheet.create({\n  badgeWrap: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  badge: {\n    position: \"relative\",\n  },\n  badgeText: {\n    position: \"absolute\",\n    textAlign: \"center\",\n    lineHeight: 39,\n    width: 35,\n    height: 39,\n    fontSize: 14,\n    color: \"#F2D379\",\n  },\n});\n","import { StyleSheet, View, Text } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\n\nfunction Lives({ lives }) {\n  let displayLives = [];\n\n  for (let i = 0; i < lives; i++) {\n    displayLives.push(\n      <MaterialCommunityIcons\n        style={styles.livesIcon}\n        name=\"popcorn\"\n        size={28}\n        key={i}\n      />\n    );\n  }\n\n  return (\n    <View style={styles.livesDisplay}>\n      <Text style={styles.livesText}>LIVES</Text>\n      <View style={styles.livesWrap}>{displayLives}</View>\n    </View>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    lives: state.lives,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    decreaseLives: () =>\n      dispatch({\n        type: \"DECREASE_LIVES\",\n      }),\n    resetLives: () =>\n      dispatch({\n        type: \"RESET_LIVES\",\n      }),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Lives);\n\nconst styles = StyleSheet.create({\n  livesDisplay: {\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    // backgroundColor: \"rgba(0, 0, 0, 0.4)\",\n    borderRadius: 8,\n  },\n  livesWrap: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    position: \"relative\",\n  },\n  livesIcon: {\n    color: \"#F2D379\",\n  },\n  livesText: {\n    fontWeight: \"bold\",\n    fontSize: 16,\n    color: \"#F2D379\",\n    // backgroundColor: \"#F2D379\",\n    // borderRadius: 8,\n    padding: 2,\n  },\n});\n","import { useEffect } from \"react\";\nimport { StyleSheet, View, ScrollView, Text } from \"react-native\";\nimport AppLoading from \"expo-app-loading\";\nimport { useFonts, Limelight_400Regular } from \"@expo-google-fonts/limelight\";\nimport { connect } from \"react-redux\";\nimport FetchApi from \"../Utils/FetchApi\";\nimport GenerateQuestion from \"../Components/Question/GenerateQuestion\";\nimport Timer from \"../Components/Indicators/Timer\";\nimport TrueFalse from \"../Components/Question/TrueFalse\";\nimport MultipleChoice from \"../Components/Question/MultipleChoice\";\nimport Badge from \"../Components/Indicators/Badge\";\nimport Lives from \"../Components/Indicators/Lives\";\nimport Theater from \"../Layout/Theater\";\n\nfunction Question({ selectedMovie, movies, setMovies, gamePlayMode }) {\n  useEffect(() => {\n    FetchApi().then((res) => {\n      setMovies(res);\n    });\n  }, []);\n\n  let [fontsLoaded] = useFonts({\n    Limelight_400Regular,\n  });\n\n  if (!fontsLoaded) {\n    return <AppLoading />;\n  } else if (Object.keys(selectedMovie).length === 0) {\n    return <GenerateQuestion movies={movies} />;\n  } else {\n    return (\n      <Theater\n        indicators={\n          <>\n            {gamePlayMode === \"easySinglePlayer\" && (\n              <View>\n                <Lives />\n              </View>\n            )}\n            {gamePlayMode !== \"easySinglePlayer\" && <Timer />}\n            <View>\n              <Badge />\n            </View>\n          </>\n        }\n        content={\n          <View style={{ width: \"100%\" }}>\n            <View style={styles.questionHeader}>\n              <Text style={styles.heading}>Question</Text>\n            </View>\n            <Text style={styles.questionText}>\n              {movies && selectedMovie?.question}\n            </Text>\n          </View>\n        }\n        buttons={\n          Array.isArray(selectedMovie?.answer) ? (\n            <MultipleChoice />\n          ) : (\n            <TrueFalse />\n          )\n        }\n      />\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    winningStreak: state.winningStreak,\n    movies: state.movies,\n    selectedMovie: state.selectedMovie,\n    scene: state.scene,\n    gamePlayMode: state.gamePlayMode || \"easySinglePlayer\",\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setMovies: (movies) =>\n      dispatch({\n        type: \"SET_MOVIES\",\n        movies,\n      }),\n  };\n}\n\nconst styles = StyleSheet.create({\n  heading: {\n    color: \"#292840\",\n    fontFamily: \"Limelight_400Regular\",\n    fontSize: 30,\n  },\n  questionText: {\n    color: \"#292840\",\n    alignSelf: \"center\",\n  },\n  badge: {\n    position: \"absolute\",\n    top: 15,\n    right: 50,\n  },\n  lives: {\n    position: \"absolute\",\n    top: -5,\n    left: 50,\n  },\n  questionHeader: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n    paddingBottom: 10,\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Question);\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport { View, Alert, Platform } from \"react-native\";\nimport { getYouTubeId } from \"../../Utils/FetchApi\";\nimport YoutubePlayer from \"react-native-youtube-iframe\";\nimport { WebView } from \"react-native-web-webview\";\n\nfunction Trailer({ movieId }) {\n  const [playing, setPlaying] = useState(false);\n  const [youTubeId, setYouTubeId] = useState(null);\n  useEffect(() => {\n    getYouTubeId(movieId)\n      .then((res) => {\n        setYouTubeId(res);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const onStateChange = useCallback((state) => {\n    window.postMessage = postMessage.bind(window);\n\n    if (state === \"ended\") {\n      setPlaying(false);\n      Alert.alert(\"video has finished playing!\");\n    }\n  }, []);\n\n  if (Platform.OS === \"web\") {\n    return (\n      <View style={{ flex: 1, width: \"100%\" }}>\n        {youTubeId && (\n          <WebView\n            mediaPlaybackRequiresUserAction={true}\n            javaScriptEnabled={true}\n            domStorageEnabled={true}\n            source={{ uri: `https://www.youtube.com/embed/${youTubeId}?rel=0` }}\n          />\n        )}\n      </View>\n    );\n  } else {\n    return (\n      <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n        <View style={{ width: \"100%\", aspectRatio: 16 / 9 }}>\n          {youTubeId && (\n            <YoutubePlayer\n              height={\"100%\"}\n              width={\"100%\"}\n              play={playing}\n              videoId={youTubeId}\n              onChangeState={onStateChange}\n            />\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Trailer;\n","import { Text, Pressable, StyleSheet, ImageBackground } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport Trailer from \"../Components/CorrectAnswer/Trailer\";\nimport AppLoading from \"expo-app-loading\";\nimport { useFonts, Limelight_400Regular } from \"@expo-google-fonts/limelight\";\nimport ticket from \"../Images/ticket.png\";\nimport Badge from \"../Components/Indicators/Badge\";\nimport Theater from \"../Layout/Theater\";\nimport Lives from \"../Components/Indicators/Lives\";\n\nconst CorrectAnswer = ({\n  selectedMovie,\n  setScene,\n  resetSelectedMovie,\n  gamePlayMode,\n}) => {\n  const handleNextQuestion = () => {\n    setScene(\"Question\");\n    resetSelectedMovie();\n  };\n\n  let [fontsLoaded] = useFonts({\n    Limelight_400Regular,\n  });\n\n  if (!fontsLoaded) {\n    return <AppLoading />;\n  } else {\n    return (\n      <Theater\n        content={<Trailer movieId={selectedMovie?.movieId} />}\n        indicators={\n          <>\n            {gamePlayMode === \"easySinglePlayer\" && <Lives />}\n            <Text style={styles.h2}>Correct!</Text>\n            <Badge />\n          </>\n        }\n        buttons={\n          <Pressable style={[styles.button]} onPress={handleNextQuestion}>\n            <ImageBackground style={styles.ticketButton} source={ticket}>\n              <Text style={styles.ticketText}>Next Question!</Text>\n            </ImageBackground>\n          </Pressable>\n        }\n      />\n    );\n  }\n};\n\nfunction mapStateToProps(state) {\n  return {\n    selectedMovie: state.selectedMovie,\n    gamePlayMode: state.gamePlayMode,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setScene: (name) =>\n      dispatch({\n        type: \"SET_SCENE\",\n        name,\n      }),\n    resetSelectedMovie: () =>\n      dispatch({\n        type: \"RESET_SELECTED_MOVIE\",\n      }),\n  };\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    flexShrink: 1,\n    alignSelf: \"center\",\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    borderRadius: 10,\n    backgroundColor: \"transparent\",\n  },\n  h2: {\n    fontSize: 28,\n    marginVertical: 10,\n    fontFamily: \"Limelight_400Regular\",\n    color: \"#F2D379\",\n  },\n  ticketButton: {\n    maxWidth: \"100%\",\n    maxHeight: \"100%\",\n    width: 224,\n    height: 116,\n    justifyContent: \"center\",\n  },\n  ticketText: {\n    fontFamily: \"Limelight_400Regular\",\n    position: \"absolute\",\n    alignSelf: \"center\",\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CorrectAnswer);\n","import {\n  View,\n  Text,\n  StyleSheet,\n  ImageBackground,\n  Pressable,\n} from \"react-native\";\nimport { useFonts, Limelight_400Regular } from \"@expo-google-fonts/limelight\";\nimport AppLoading from \"expo-app-loading\";\nimport { connect } from \"react-redux\";\n\nconst Credits = ({ setscene }) => {\n  let [fontsLoaded] = useFonts({ Limelight_400Regular });\n  if (!fontsLoaded) {\n    return <AppLoading />;\n  } else {\n    return (\n      <View style={styles.container}>\n        <View style={styles.credits}>\n          <Text style={styles.headerStyle}>CREDITS</Text>\n        </View>\n        <View style={styles.contentLayout}>\n          <View style={styles.titles}>\n            <Text style={styles.textStyle}>Owner/Client</Text>\n            <Text style={styles.textStyle}>Team Lead</Text>\n            <Text style={styles.textStyle}>Team Lead</Text>\n            <Text style={styles.textStyle}>Team Lead</Text>\n            <Text style={styles.textStyle}>Team Lead</Text>\n            <Text style={styles.textStyle}>Developer</Text>\n            <Text style={styles.textStyle}>Developer</Text>\n            <Text>.</Text>\n            <Text style={styles.textStyle}>Developer</Text>\n            <Text style={styles.textStyle}>Developer</Text>\n            <Text style={styles.textStyle}>Developer</Text>\n            <Text style={styles.textStyle}>Developer</Text>\n            <Text style={styles.textStyle}>Developer</Text>\n            <Text style={styles.textStyle}>Developer</Text>\n          </View>\n          <View style={styles.names}>\n            <Text style={styles.textStyle}>Juan Lucero (he/him)</Text>\n            <Text style={styles.textStyle}>Hiwot Beshe (she/her)</Text>\n            <Text style={styles.textStyle}>Garet Hough (he/him)</Text>\n            <Text style={styles.textStyle}>Xavier Mercado (he/him)</Text>\n            <Text style={styles.textStyle}>Sam Rosenberg (he/him)</Text>\n            <Text style={styles.textStyle}>Grace Aranico (she/her)</Text>\n            <Text style={styles.textStyle}>Paidamoyo-Janet \"Myles\"</Text>\n            <Text style={styles.textStyle}>Azehko (she/her/they/them)</Text>\n            <Text style={styles.textStyle}>Darla Brown (she/her)</Text>\n            <Text style={styles.textStyle}>Habteab Firezgi (he/him)</Text>\n            <Text style={styles.textStyle}>Eyob Legese (he/him)</Text>\n            <Text style={styles.textStyle}>Albert Martinez (he/him)</Text>\n            <Text style={styles.textStyle}>Jason Smith (he/him)</Text>\n            <Text style={styles.textStyle}>Tesfa Worku (he/him)</Text>\n          </View>\n        </View>\n        <Pressable onPress={() => setscene(\"Main\")}>\n          <ImageBackground\n            source={require(\"../Images/ticket.png\")}\n            style={styles.ticket}\n          >\n            <Text>Home</Text>\n          </ImageBackground>\n        </Pressable>\n      </View>\n    );\n  }\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setscene: (name) =>\n      dispatch({\n        type: \"SET_SCENE\",\n        name: name,\n      }),\n  };\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#292840\",\n    alignItems: \"center\",\n  },\n  credits: {\n    alignItems: \"center\",\n    padding: 10,\n    borderColor: \"#F2D379\",\n  },\n  contentLayout: {\n    textAlign: \"center\",\n    flexDirection: \"row\",\n  },\n  titles: {\n    textAlign: \"right\",\n    marginRight: 10,\n  },\n  names: {\n    textAlign: \"left\",\n  },\n  headerStyle: {\n    color: \"#F2D379\",\n    fontFamily: \"Limelight_400Regular\",\n    fontSize: 25,\n  },\n  textStyle: {\n    color: \"#F2D379\",\n    fontSize: 15,\n  },\n  ticket: {\n    margin: 10,\n    padding: 10,\n    width: 100,\n    aspectRatio: 18 / 9,\n    alignSelf: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n\nexport default connect(null, mapDispatchToProps)(Credits);\n","import {\r\n  View,\r\n  Text,\r\n  Linking,\r\n  StyleSheet,\r\n  ScrollView,\r\n  ImageBackground,\r\n  Pressable,\r\n} from \"react-native\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useFonts, Limelight_400Regular } from \"@expo-google-fonts/limelight\";\r\nimport AppLoading from \"expo-app-loading\";\r\n\r\nconst About = ({ setScene }) => {\r\n  let [fontsLoaded] = useFonts({ Limelight_400Regular });\r\n  if (!fontsLoaded) {\r\n    return <AppLoading />;\r\n  } else {\r\n    return (\r\n      <View style={styles.mainContainer}>\r\n        <ScrollView style={styles.scrollView}>\r\n          <View style={styles.subContainer}>\r\n            <View style={styles.contentContainer}>\r\n              <Text style={styles.headings}>\r\n                About the \"Trivia & Chill\" Game:\r\n              </Text>\r\n              <Text style={styles.content}>\r\n                This game was created in order for our developer team to learn\r\n                more about React-Native, Redux, Axios, and dynamic question\r\n                generation using a live data base.\r\n              </Text>\r\n            </View>\r\n\r\n            <View style={styles.contentContainer}>\r\n              <Text style={styles.headings}>About Workforce Training:</Text>\r\n\r\n              <Text style={styles.content}>\r\n                Our curriculum doesn't come from textbooks, it comes directly\r\n                from practicing industry experts. Our system of teaching is\r\n                hands-on and up-to-date with current practices.{\" \"}\r\n                <Text\r\n                  style={{ textDecorationLine: \"underline\", color: \"white\" }}\r\n                  onPress={() =>\r\n                    Linking.openURL(\r\n                      \"https://bitwiseindustries.com/services/workforce-training/classes/\"\r\n                    )\r\n                  }\r\n                >\r\n                  Learn more about Workforce Training\r\n                </Text>\r\n              </Text>\r\n            </View>\r\n          </View>\r\n          <Pressable onPress={() => setScene(\"Main\")}>\r\n            <ImageBackground\r\n              source={require(\"../Images/ticket.png\")}\r\n              style={styles.ticketImage}\r\n            >\r\n              <Text>Home</Text>\r\n            </ImageBackground>\r\n          </Pressable>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setScene: (name) =>\r\n      dispatch({\r\n        type: \"SET_SCENE\",\r\n        name: name,\r\n      }),\r\n  };\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  contentContainer: {\r\n    backgroundColor: \"#A0947C\",\r\n    marginTop: 10,\r\n    width: \"90%\",\r\n    alignSelf: \"center\",\r\n    padding: 5,\r\n    borderRadius: 8,\r\n  },\r\n  headings: {\r\n    fontFamily: \"Limelight_400Regular\",\r\n    borderRadius: 8,\r\n    padding: 20,\r\n    textAlign: \"center\",\r\n    color: \"#F2D379\",\r\n    fontSize: 30,\r\n    marginBottom: 15,\r\n    marginTop: 15,\r\n    backgroundColor: \"#292840\",\r\n  },\r\n  content: {\r\n    borderRadius: 8,\r\n    padding: 20,\r\n    fontSize: 20,\r\n    backgroundColor: \"#292840\",\r\n    marginBottom: 15,\r\n    color: \"#F2D379\",\r\n  },\r\n  mainContainer: {\r\n    backgroundColor: \"#401323\",\r\n    height: \"100%\",\r\n  },\r\n  ticketImage: {\r\n    marginTop: 10,\r\n    flex: 1,\r\n    marginBottom: 10,\r\n    width: 200,\r\n    aspectRatio: 18 / 9,\r\n    alignSelf: \"center\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(About);\r\n","import { View, Text, StyleSheet, Platform } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { useSafeAreaInsets} from \"react-native-safe-area-context\";\n\nfunction GamePlayMode({ gamePlayMode }) {\n\n  const insets = useSafeAreaInsets();  \n\n  let currentMode = \"\";\n  switch (gamePlayMode) {\n    case \"singlePlayer\":\n      currentMode = \"Single Player Mode\";\n      break;\n    case \"easySinglePlayer\":\n      currentMode = \"Easy Single Player Mode \";\n      break;\n    default:\n      \"singlePlayer\";\n  }\n\n  return (\n    <View style={[styles.container,\n      Platform.select({\n        ios: {\n          top: insets.top + 30\n        },\n        android: {\n          top: 30\n        },\n        default: {\n          top: 30,\n        },\n      }),     \n    ]\n    }>\n      <Text style={styles.gamePlayText}>\n        {currentMode}\n      </Text>\n    </View>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  gamePlayMode: state.gamePlayMode,\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    alignSelf: \"center\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#401323\",\n    borderRadius: 10,\n    height: 18,\n    width: 150,\n    position: \"absolute\",\n    zIndex: 6,\n    borderColor: \"#F2D379\",\n    borderWidth: 1,\n    paddingLeft:4\n  },\n  gamePlayText: {\n    color: \"#F2D379\",\n    fontWeight: \"bold\",\n    fontSize: 12,\n  },\n});\n\nexport default connect(mapStateToProps)(GamePlayMode);\n","import {\n  View,\n  Text,\n  Pressable,\n  StyleSheet,\n  ImageBackground,\n  useWindowDimensions,\n} from \"react-native\";\nimport { connect } from \"react-redux\";\nimport Lives from \"../Components/Indicators/Lives\";\nimport AppLoading from \"expo-app-loading\";\nimport { useFonts, Limelight_400Regular } from \"@expo-google-fonts/limelight\";\nimport ticket from \"../Images/ticket.png\";\nimport Badge from \"../Components/Indicators/Badge\";\nimport Theater from \"../Layout/Theater\";\n\nconst WrongAnswer = ({\n  setScene,\n  resetSelectedMovie,\n  lives,\n  resetWinningStreak,\n}) => {\n  const { width } = useWindowDimensions();\n\n  const handleNextQuestion = () => {\n    resetWinningStreak();\n    setScene(\"Question\");\n    resetSelectedMovie();\n  };\n\n  const ohno = `Oh no! You lost a life.\nYou have ${lives} ${lives > 1 ? \"lives\" : \"life\"} left.\nTry again!`;\n\n  let [fontsLoaded] = useFonts({\n    Limelight_400Regular,\n  });\n  if (!fontsLoaded) {\n    return <AppLoading />;\n  } else {\n    return (\n      <Theater\n        content={\n          <>\n            <Text style={width < 336 ? styles.h2Fold : styles.h2}>\n              Incorrect Answer!\n            </Text>\n            <Text style={width < 336 ? styles.livesTextFold : styles.livesText}>\n              {ohno}\n            </Text>\n          </>\n        }\n        indicators={\n          <>\n            <View>\n              <Lives />\n            </View>\n            <View>\n              <Badge />\n            </View>\n          </>\n        }\n        buttons={\n          <Pressable\n            style={[styles.button]}\n            onPress={handleNextQuestion}\n            accessibilityRole=\"button\"\n            accessibilityHint=\"This button takes you to the next question\"\n          >\n            <ImageBackground style={styles.ticketButton} source={ticket}>\n              <Text style={styles.ticketText}>Next Question!</Text>\n            </ImageBackground>\n          </Pressable>\n        }\n      />\n    );\n  }\n};\n\nfunction mapStateToProps(state) {\n  return {\n    lives: state.lives,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setScene: (name) =>\n      dispatch({\n        type: \"SET_SCENE\",\n        name,\n      }),\n    resetSelectedMovie: () =>\n      dispatch({\n        type: \"RESET_SELECTED_MOVIE\",\n      }),\n    resetWinningStreak: () =>\n      dispatch({\n        type: \"RESET_WINNING_STREAK\",\n      }),\n  };\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    flexShrink: 1,\n    alignSelf: \"center\",\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    borderRadius: 10,\n    backgroundColor: \"transparent\",\n    marginTop: 50,\n  },\n  h2: {\n    fontSize: 28,\n    fontFamily: \"Limelight_400Regular\",\n    color: \"#292840\",\n    alignSelf: \"center\",\n  },\n  h2Fold: {\n    fontSize: 20,\n    fontFamily: \"Limelight_400Regular\",\n    color: \"#292840\",\n    alignSelf: \"center\",\n  },\n  ticketButton: {\n    maxWidth: \"100%\",\n    maxHeight: \"100%\",\n    width: 224,\n    height: 116,\n    justifyContent: \"center\",\n  },\n  ticketText: {\n    fontFamily: \"Limelight_400Regular\",\n    position: \"absolute\",\n    alignSelf: \"center\",\n  },\n  livesText: {\n    marginTop: 10,\n    color: \"#292840\",\n    fontSize: 18,\n    lineHeight: 28,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n  },\n  livesTextFold: {\n    marginTop: 10,\n    color: \"#292840\",\n    fontSize: 16,\n    lineHeight: 28,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrongAnswer);\n","import {\n  ImageBackground,\n  Text,\n  View,\n  Animated,\n  Platform,\n  useWindowDimensions,\n} from \"react-native\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { useEffect, useRef } from \"react\";\nexport default function CorrectAnswerDemo() {\n  const translation = useRef(new Animated.ValueXY({ x: 100, y: 40 })).current;\n  const pointerSize = useRef(new Animated.Value(0)).current;\n  const screenWidth = useWindowDimensions().width;\n  useEffect(() => {\n    Animated.loop(\n      Animated.sequence([\n        Animated.parallel([\n          Animated.timing(translation.x, {\n            toValue: 0,\n            duration: 2000,\n            delay: 1000,\n            useNativeDriver: false,\n          }),\n          Animated.timing(translation.y, {\n            toValue:\n              Platform.OS === \"web\" ? (screenWidth < 550 ? 65 : 105) : 180,\n            duration: 3500,\n            delay: 1000,\n            useNativeDriver: false,\n          }),\n        ]),\n        Animated.timing(pointerSize, {\n          toValue: 100,\n          duration: 300,\n          useNativeDriver: false,\n        }),\n      ])\n    ).start();\n  }, [screenWidth]);\n  return (\n    <View>\n      <ImageBackground\n        resizeMode={Platform.OS === \"web\" ? \"contain\" : \"contain\"}\n        style={{\n          flex: 1,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          alignSelf: \"center\",\n          width: \"100%\",\n          height: \"100%\",\n          aspectRatio: Platform.OS === \"web\" ? 1021 / 540 : 321 / 590,\n        }}\n        source={\n          Platform.OS === \"web\"\n            ? require(\"../../Images/HowToPlay/CorrectAnswer/correctAnswerDemo.png\")\n            : require(\"../../Images/HowToPlay/CorrectAnswer/correctAnswerDemoMobile.png\")\n        }\n      >\n        <Animated.View\n          style={{\n            flex: 1,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            transform: [\n              { translateX: translation.x },\n              { translateY: translation.y },\n              {\n                scale: pointerSize.interpolate({\n                  inputRange: [0, 50, 100],\n                  outputRange: [1, 0.6, 1],\n                }),\n              },\n            ],\n          }}\n        >\n          {Platform.OS === \"web\" ? (\n            <Entypo name=\"mouse-pointer\" size={24} color={\"black\"} />\n          ) : (\n            <FontAwesome name=\"hand-pointer-o\" size={38} color=\"black\" />\n          )}\n        </Animated.View>\n      </ImageBackground>\n    </View>\n  );\n}\n","import {\n  View,\n  Text,\n  Animated,\n  StyleSheet,\n  useWindowDimensions,\n  ImageBackground,\n  Easing,\n  Platform,\n} from \"react-native\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport mainAnimation from \"../../Images/HowToPlay/Main/mainAnimation.png\";\nimport mainAnimationWeb from \"../../Images/HowToPlay/Main/mainAnimationWeb.png\";\nimport React, { useRef, useEffect } from \"react\";\n\nconst MainAnimation = () => {\n  const translation = useRef(new Animated.Value(0)).current;\n  const screenWidth = useWindowDimensions().width;\n\n  useEffect(() => {\n    Animated.loop(\n      Animated.sequence([\n        Animated.timing(translation, {\n          toValue: 0,\n          useNativeDriver: true,\n        }),\n        Animated.timing(translation, {\n          toValue:\n            Platform.OS === \"web\" ? (screenWidth < 581 ? 120 : 190) : 310,\n          easing: Easing.bounce,\n          duration: 5000,\n          useNativeDriver: true,\n        }),\n      ])\n    ).start();\n  }, []);\n\n  return (\n    <View style={{ flex: 1 }}>\n      <ImageBackground\n        resizeMode={\"cover\"}\n        style={styles.container}\n        source={Platform.OS === \"web\" ? mainAnimationWeb : mainAnimation}\n      >\n        <View style={{ alignItems: \"center\", flex: 1 }}>\n          <Animated.View\n            style={{\n              width: 30,\n              height: 30,\n              duration: 700,\n              transform: [{ translateY: translation }],\n              opacity: translation.interpolate({\n                inputRange: [0, 50],\n                outputRange: [0, 1],\n              }),\n            }}\n          >\n            <Text style={styles.animationFontAwesome}>\n              <FontAwesome name=\"arrow-down\" size={24} color=\"#292840\" />\n            </Text>\n          </Animated.View>\n        </View>\n      </ImageBackground>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    justifyContent: \"center\",\n    height: \"100%\",\n    width: \"100%\",\n    flexDirection: \"column\",\n  },\n  animationText: {\n    color: \"#F2D379\",\n    margin: 5,\n  },\n  animationFontAwesome: {\n    alignSelf: \"center\",\n    alignItems: \"center\",\n  },\n});\n\nexport default MainAnimation;\n","import { Animated, View, ImageBackground, Platform } from \"react-native\";\nimport { useRef, useEffect } from \"react\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport gameover from \"../../Images/HowToPlay/GameOver/SinglePlayer/gameover.png\";\nimport gameOverMobile from \"../../Images/HowToPlay/GameOver/SinglePlayer/gameOverMobile.png\";\n\nexport default function GameOverHelp() {\n  const translation = useRef(\n    new Animated.ValueXY({\n      x: Platform.OS === \"web\" ? 100 : 50,\n      y: Platform.OS === \"web\" ? 100 : 50,\n    })\n  ).current;\n\n  useEffect(() => {\n    Animated.loop(\n      Animated.parallel([\n        Animated.timing(translation.x, {\n          toValue: 0,\n          duration: 3000,\n          delay: 1000,\n          useNativeDriver: false,\n        }),\n        Animated.timing(translation.y, {\n          toValue: Platform.OS === \"web\" ? 35 : -12,\n          duration: 3000,\n          delay: 1000,\n          useNativeDriver: false,\n        }),\n      ])\n    ).start();\n  }, []);\n\n  return (\n    <View>\n      <ImageBackground\n        resizeMode={Platform.OS === \"web\" ? \"contain\" : \"cover\"}\n        style={{\n          flex: 1,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          alignSelf: \"center\",\n          maxWidth: 647,\n          maxHeight: Platform.OS === \"web\" ? 423 : \"100%\",\n          width: \"100%\",\n          height: \"100%\",\n          aspectRatio: Platform.OS === \"web\" ? 647 / 423 : 1170 / 2532,\n        }}\n        source={Platform.OS === \"web\" ? gameover : gameOverMobile}\n      >\n        <Animated.View\n          style={{\n            transform: [\n              { translateX: translation.x },\n              { translateY: translation.y },\n            ],\n            marginBottom: 10,\n          }}\n        >\n          <Entypo\n            name={Platform.OS === \"web\" ? \"mouse-pointer\" : \"circle\"}\n            size={24}\n            color={Platform.OS === \"web\" ? \"black\" : \"#A0947C\"}\n          />\n        </Animated.View>\n      </ImageBackground>\n    </View>\n  );\n}\n","import {\n  Animated,\n  View,\n  ImageBackground,\n  Platform,\n  useWindowDimensions,\n} from \"react-native\";\nimport { useRef, useEffect } from \"react\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport WrongAnswerScreen from \"../../Images/HowToPlay/WrongAnswer/WrongAnswerScreen.png\";\nimport WrongAnswerScreenMobile from \"../../Images/HowToPlay/WrongAnswer/WrongAnswerScreenMobile.png\";\n\nexport default function WrongAnswerHelp() {\n  const translation = useRef(\n    new Animated.ValueXY({\n      x: Platform.OS === \"web\" ? 100 : 50,\n      y: Platform.OS === \"web\" ? 100 : 50,\n    })\n  ).current;\n\n  const lifePointerCircle = useRef(new Animated.Value(1)).current;\n\n  const screenWidth = useWindowDimensions().width;\n\n  useEffect(() => {\n    Animated.loop(\n      Animated.parallel([\n        Animated.timing(translation.x, {\n          toValue: 10,\n          duration: 3000,\n          delay: 1000,\n          useNativeDriver: false,\n        }),\n        Animated.timing(translation.y, {\n          toValue:\n            Platform.OS === \"web\" ? (screenWidth < 800 ? 185 : 160) : 185,\n          duration: 3000,\n          delay: 1000,\n          useNativeDriver: false,\n        }),\n        Animated.timing(lifePointerCircle, {\n          toValue: 0,\n          duration: 3000,\n          useNativeDriver: false,\n        }),\n      ])\n    ).start();\n  }, []);\n\n  return (\n    <View>\n      <ImageBackground\n        resizeMode={Platform.OS === \"web\" ? \"contain\" : \"cover\"}\n        style={{\n          flex: 1,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          alignSelf: \"center\",\n          maxWidth: 647,\n          maxHeight: Platform.OS === \"web\" ? 423 : \"100%\",\n          width: \"100%\",\n          height: \"100%\",\n          aspectRatio: Platform.OS === \"web\" ? 647 / 423 : 1170 / 2532,\n        }}\n        source={\n          Platform.OS === \"web\" ? WrongAnswerScreen : WrongAnswerScreenMobile\n        }\n      >\n        <Animated.View\n          style={{\n            transform: [\n              { translateX: translation.x },\n              { translateY: translation.y },\n            ],\n          }}\n        >\n          <Entypo\n            name={Platform.OS === \"web\" ? \"mouse-pointer\" : \"dot-single\"}\n            size={Platform.OS === \"web\" ? 24 : 72}\n            color={Platform.OS === \"web\" ? \"black\" : \"red\"}\n          />\n        </Animated.View>\n\n        <Animated.View\n          style={{\n            transform: [\n              { translateX: Platform.OS === \"web\" ? -50 : -63 },\n              {\n                translateY:\n                  Platform.OS === \"web\" ? (screenWidth < 800 ? 41 : 33) : 35,\n              },\n            ],\n            opacity: lifePointerCircle,\n          }}\n        >\n          <Entypo name=\"circle\" size={40} color=\"white\" />\n        </Animated.View>\n      </ImageBackground>\n    </View>\n  );\n}\n","import {\r\n  ImageBackground,\r\n  StyleSheet,\r\n  View,\r\n  Animated,\r\n  useWindowDimensions,\r\n  Platform,\r\n} from \"react-native\";\r\nimport { Entypo } from \"@expo/vector-icons\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport questionPage from \"../../Images/HowToPlay/Questions/SinglePlayer/question-page.png\";\r\nimport questionPageAnswered from \"../../Images/HowToPlay/Questions/SinglePlayer/question-answered.png\";\r\nimport questionPageMobile from \"../../Images/HowToPlay/Questions/SinglePlayer/question-page-mobile.png\";\r\nimport questionPageAnsweredMobile from \"../../Images/HowToPlay/Questions/SinglePlayer/question-answered-mobile.png\";\r\n\r\nexport default function QuestionInstructions() {\r\n  const { width } = useWindowDimensions();\r\n  const translation = useRef(\r\n    new Animated.ValueXY({\r\n      x: Platform.OS === \"web\" ? (width < 630 ? width * 0.2 : 230) : 100,\r\n      y: 40,\r\n    })\r\n  ).current;\r\n\r\n  useEffect(() => {\r\n    Animated.loop(\r\n      Animated.parallel([\r\n        Animated.timing(translation.x, {\r\n          toValue: Platform.OS === \"web\" ? 0 : 4,\r\n          duration: 2000,\r\n          delay: 1000,\r\n          useNativeDriver: false,\r\n        }),\r\n        Animated.timing(translation.y, {\r\n          toValue:\r\n            Platform.OS === \"web\" ? (width < 630 ? width * 0.13 : 85) : 140,\r\n          duration: 2000,\r\n          delay: 1000,\r\n          useNativeDriver: false,\r\n        }),\r\n      ])\r\n    ).start();\r\n  }, [width]);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <ImageBackground\r\n        source={Platform.OS === \"web\" ? questionPage : questionPageMobile}\r\n        style={{\r\n          height: \"100%\",\r\n          width: \"100%\",\r\n          aspectRatio: Platform.OS === \"web\" ? 1021 / 540 : 5 / 9,\r\n        }}\r\n      >\r\n        <Animated.Image\r\n          source={\r\n            Platform.OS === \"web\"\r\n              ? questionPageAnswered\r\n              : questionPageAnsweredMobile\r\n          }\r\n          style={{\r\n            position: \"absolute\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            aspectRatio: Platform.OS === \"web\" ? 1021 / 540 : 5 / 9,\r\n            borderRadius: 20,\r\n            opacity: translation.x.interpolate({\r\n              inputRange: Platform.OS === \"web\" ? [0, 2] : [4, 6],\r\n              outputRange: [1, 0],\r\n              extrapolate: \"clamp\",\r\n            }),\r\n          }}\r\n        />\r\n        <Animated.View\r\n          style={{\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            transform: [\r\n              { translateX: translation.x },\r\n              { translateY: translation.y },\r\n            ],\r\n          }}\r\n        >\r\n          <Entypo name=\"mouse-pointer\" size={24} color=\"black\" />\r\n        </Animated.View>\r\n      </ImageBackground>\r\n    </View>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n","import {\n  ImageBackground,\n  StyleSheet,\n  View,\n  Animated,\n  useWindowDimensions,\n  Platform,\n} from \"react-native\";\nimport { Entypo, MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { useEffect, useRef } from \"react\";\nimport loseGameAnimationWeb from \"../../Images/HowToPlay/GameOver/EasySinglePlayer/gameOverAnimationWEb.png\";\nimport loseGameAnimationMobile from \"../../Images/HowToPlay/GameOver/EasySinglePlayer/gameOverAnimationMobile.png\";\nimport oneLifeAnimationMobile from \"../../Images/HowToPlay/GameOver/EasySinglePlayer/oneLifeAnimationMobile.png\";\nimport oneLifeAnimationWeb from \"../../Images/HowToPlay/GameOver/EasySinglePlayer/oneLifeAnimationWeb.png\";\n\nexport default function LoseGameInstruction() {\n  const { width } = useWindowDimensions();\n  const translation = useRef(\n    new Animated.ValueXY({\n      x: Platform.OS === \"web\" ? (width < 800 ? 500 : 350) : 200,\n      y: Platform.OS === \"web\" ? (width < 800 ? 300 : 250) : 370,\n    })\n  ).current;\n  const lifePopcornIcon = useRef(new Animated.Value(1)).current;\n  const backgroundFade = useRef(new Animated.Value(0)).current;\n\n  useEffect(() => {\n    Animated.loop(\n      Animated.sequence([\n        Animated.timing(lifePopcornIcon, {\n          toValue: 1,\n          duration: 1,\n          useNativeDriver: false,\n        }),\n        Animated.parallel([\n          Animated.timing(translation.x, {\n            toValue: Platform.OS === \"web\" ? 260 : 120,\n            duration: 1000,\n            useNativeDriver: false,\n          }),\n          Animated.timing(translation.y, {\n            toValue: Platform.OS === \"web\" ? (width < 815 ? 200 : 180) : 280,\n            duration: 1000,\n            useNativeDriver: false,\n          }),\n        ]),\n        Animated.timing(lifePopcornIcon, {\n          toValue: 0,\n          duration: 1500,\n          useNativeDriver: false,\n        }),\n        Animated.timing(backgroundFade, {\n          toValue: 1,\n          duration: 1500,\n          useNativeDriver: false,\n        }),\n        Animated.timing(translation.x, {\n          toValue: Platform.OS === \"web\" ? (width < 800 ? 500 : 350) : 200,\n          duration: 1,\n          useNativeDriver: false,\n        }),\n        Animated.timing(translation.y, {\n          toValue: Platform.OS === \"web\" ? (width < 800 ? 300 : 250) : 370,\n          duration: 1,\n          useNativeDriver: false,\n        }),\n        Animated.timing(backgroundFade, {\n          toValue: 0,\n          duration: 250,\n          delay: 1500,\n          useNativeDriver: false,\n        }),\n      ])\n    ).start();\n  }, [width]);\n\n  return (\n    <View style={styles.container}>\n      <ImageBackground\n        resizeMode={\"cover\"}\n        source={\n          Platform.OS === \"web\" ? oneLifeAnimationWeb : oneLifeAnimationMobile\n        }\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          aspectRatio: Platform.OS === \"web\" ? 900 / 500 : 5 / 9,\n        }}\n      >\n        <Animated.Image\n          source={\n            Platform.OS === \"web\"\n              ? loseGameAnimationWeb\n              : loseGameAnimationMobile\n          }\n          style={{\n            position: \"absolute\",\n            width: \"100%\",\n            height: \"100%\",\n            aspectRatio: Platform.OS === \"web\" ? 1021 / 540 : 5 / 9,\n            opacity: backgroundFade,\n          }}\n        />\n\n        <Animated.View\n          style={{\n            transform: [\n              { translateX: translation.x },\n              { translateY: translation.y },\n            ],\n\n            opacity: backgroundFade.interpolate({\n              inputRange: [0, 1],\n              outputRange: [1, 0],\n            }),\n          }}\n        >\n          <Entypo name=\"mouse-pointer\" size={18} color=\"black\" />\n        </Animated.View>\n        <Animated.View\n          style={{\n            transform: [\n              {\n                translateX:\n                  Platform.OS === \"web\" ? (width < 800 ? 140 : 130) : 30,\n              },\n              {\n                translateY:\n                  Platform.OS === \"web\" ? (width < 800 ? 100 : 110) : 200,\n              },\n            ],\n            opacity: lifePopcornIcon,\n          }}\n        >\n          <MaterialCommunityIcons\n            style={styles.livesIcon}\n            name=\"popcorn\"\n            size={20}\n            color=\"#F2D379\"\n          />\n        </Animated.View>\n      </ImageBackground>\n    </View>\n  );\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginBottom: 20,\n  },\n});\n","import {\n  Animated,\n  View,\n  ImageBackground,\n  Platform,\n  useWindowDimensions,\n} from \"react-native\";\nimport { useRef, useEffect } from \"react\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport GameStartEasy from \"../../Images/HowToPlay/Questions/EasySinglePlayer/gameStartEasy.png\";\nimport GameStartEasyMobile from \"../../Images/HowToPlay/Questions/EasySinglePlayer/gameStartEasyMobile.png\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\n\nexport default function EasyModeLivesHelp() {\n  const lifePointerCircle = useRef(new Animated.Value(1)).current;\n\n  const screenWidth = useWindowDimensions().width;\n\n  useEffect(() => {\n    Animated.loop(\n      Animated.parallel([\n        Animated.timing(lifePointerCircle, {\n          toValue: 0,\n          duration: 3000,\n          useNativeDriver: false,\n        }),\n      ])\n    ).start();\n  }, []);\n\n  return (\n    <View>\n      <ImageBackground\n        resizeMode={Platform.OS === \"web\" ? \"contain\" : \"cover\"}\n        style={{\n          flex: 1,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          alignSelf: \"center\",\n          maxWidth: 647,\n          maxHeight: Platform.OS === \"web\" ? 423 : \"100%\",\n          width: \"100%\",\n          height: \"100%\",\n          aspectRatio: Platform.OS === \"web\" ? 647 / 423 : 1170 / 2532,\n        }}\n        source={Platform.OS === \"web\" ? GameStartEasy : GameStartEasyMobile}\n      >\n        <Animated.View\n          style={{\n            transform: [\n              {\n                translateX:\n                  Platform.OS === \"web\"\n                    ? screenWidth < 800\n                      ? -120\n                      : -100\n                    : -65,\n              },\n              { translateY: Platform.OS === \"web\" ? 10 : 70 },\n            ],\n            opacity: lifePointerCircle,\n          }}\n        >\n          <View style={{ flexDirection: \"row\" }}>\n            <MaterialCommunityIcons\n              name=\"popcorn\"\n              size={screenWidth > 800 ? 12 : 16}\n              color=\"#F2D379\"\n            />\n            <MaterialCommunityIcons\n              name=\"popcorn\"\n              size={screenWidth > 800 ? 12 : 16}\n              color=\"#F2D379\"\n            />\n            <MaterialCommunityIcons\n              name=\"popcorn\"\n              size={screenWidth > 800 ? 12 : 16}\n              color=\"#F2D379\"\n            />\n          </View>\n        </Animated.View>\n      </ImageBackground>\n    </View>\n  );\n}\n","import { ImageBackground, StyleSheet, View, Platform } from \"react-native\";\nimport gameSettingsAnimation from \"../../Images/HowToPlay/Settings/gameSettingsAnimation.gif\";\nimport gameSettingsAnimationMobile from \"../../Images/HowToPlay/Settings/gameSettingMobile.gif\";\n\nexport default function GameInstructionSetting() {\n  return (\n    <View style={styles.container}>\n      <ImageBackground\n        resizeMode={\"cover\"}\n        source={\n          Platform.OS === \"web\"\n            ? gameSettingsAnimation\n            : gameSettingsAnimationMobile\n        }\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          aspectRatio: Platform.OS === \"web\" ? 960 / 540 : 360 / 750,\n        }}\n      ></ImageBackground>\n    </View>\n  );\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginBottom: 20,\n  },\n});\n","import {\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n  ImageBackground,\n  Pressable,\n  useWindowDimensions,\n  Platform,\n} from \"react-native\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useFonts, Limelight_400Regular } from \"@expo-google-fonts/limelight\";\nimport AppLoading from \"expo-app-loading\";\nimport CorrectAnswerDemo from \"../Components/HowToPlay/CorrectAnswerDemo\";\nimport MainAnimation from \"../Components/HowToPlay/MainAnimation\";\nimport GameOverHelp from \"../Components/HowToPlay/GameOverHelp.js\";\nimport WrongAnswerHelp from \"../Components/HowToPlay/WrongAnswerHelp\";\nimport QuestionInstructions from \"../Components/HowToPlay/QuestionInstructions\";\nimport LoseGameInstruction from \"../Components/HowToPlay/LoseGameInstruction\";\nimport EasyModeLivesHelp from \"../Components/HowToPlay/EasyModeLivesHelp\";\nimport GameInstructionSetting from \"../Components/HowToPlay/GameInstructionSetting\";\nconst HowToPlay = ({ setScene }) => {\n  let [fontsLoaded] = useFonts({ Limelight_400Regular });\n  const { width } = useWindowDimensions();\n\n  let flexDirection =\n    width > 800\n      ? { flexDirection: \"row\", justifyContent: \"space-between\" }\n      : \"\";\n  let columnGap = width > 800 ? { marginRight: 10 } : null;\n  let animationContainer = {\n    width: Platform.OS === \"web\" ? (width > 800 ? 500 : \"100%\") : 230,\n    alignSelf: \"center\",\n  };\n  // There is a space for bullets here, so please leave the gap\n  const bullet = `\n\t\n1.  Select the gear icon to open the Settings.\n2.  Change “Select a Game Play Mode” to “Easy Single Player”.\n3.  Select the “X” icon to close the Settings.`;\n\n  if (!fontsLoaded) {\n    return <AppLoading />;\n  } else {\n    return (\n      <View style={styles.mainContainer}>\n        <ScrollView>\n          <View style={styles.contentContainer}>\n            <Text style={styles.headings}>How To Play</Text>\n            <View style={styles.instructionWrapper}>\n              <Text style={styles.instructionText}>\n                Thanks for playing \"Trivia & Chill Game\". This is a trivia game\n                to test your movie knowledge. Random questions about popular\n                movies could be shown as true/false or multiple choice. Answer\n                correctly to increase your winning streak! If you get a wrong\n                answer, then the game is over.\n              </Text>\n              <Text style={styles.instructionText}>\n                You can choose between the following game modes to change the\n                difficulty of the game.\n              </Text>\n            </View>\n          </View>\n          <View style={styles.contentContainer}>\n            <Text style={styles.headings}>Setting </Text>\n            <View style={[styles.instructionWrapper, flexDirection]}>\n              <Text style={[styles.instructionTextBullet, columnGap]}>\n                You can choose between the following game modes to change the\n                difficulty of the game.\n                <Text style={styles.instructionTextBullet}>{bullet}</Text>\n              </Text>\n              <View style={[styles.settingAnimation, animationContainer]}>\n                <GameInstructionSetting />\n              </View>\n            </View>\n          </View>\n          <View style={styles.contentContainer}>\n            <Text style={styles.headings}>Single Player Mode (Default)</Text>\n\n            <View style={[styles.instructionWrapper, flexDirection]}>\n              <Text style={[styles.instructionText, columnGap]}>\n                1. Select “Start\" to begin the game\n              </Text>\n\n              <View style={[styles.mainAnimation, animationContainer]}>\n                <MainAnimation />\n              </View>\n            </View>\n\n            <View style={[styles.instructionWrapper, flexDirection]}>\n              <Text style={[styles.instructionText, columnGap]}>\n                2. Read and answer the question before the timer runs out!\n              </Text>\n              <View style={animationContainer}>\n                <QuestionInstructions />\n              </View>\n            </View>\n\n            <View style={[styles.instructionWrapper, flexDirection]}>\n              <Text style={[styles.instructionText, columnGap]}>\n                3. Guess correctly to increase your winning streak, and enjoy\n                the movie trailer. Select the “Next Question” button to continue\n                the game.\n              </Text>\n              <View style={animationContainer}>\n                <CorrectAnswerDemo />\n              </View>\n            </View>\n\n            <View style={[styles.instructionWrapper, flexDirection]}>\n              <Text style={[styles.instructionText, columnGap]}>\n                4. Making a wrong answer results in sudden death. Select \"Back\n                to Start\" to restart the game.\n              </Text>\n              <View style={animationContainer}>\n                <GameOverHelp />\n              </View>\n            </View>\n          </View>\n\n          <View style={styles.contentContainer}>\n            <Text style={styles.headings}>Easy Single Player mode</Text>\n\n            <View style={styles.instructionWrapper}>\n              <Text style={styles.instructionText}>\n                Game play is the same as Single Player Mode with these changes.\n              </Text>\n            </View>\n\n            <View style={styles.instructionWrapper}>\n              <Text style={styles.instructionText}>\n                1. See \"Settings\" instructions\n              </Text>\n            </View>\n\n            <View style={[styles.instructionWrapper, flexDirection]}>\n              <Text style={[styles.instructionText, columnGap]}>\n                2. Start the game with 3 lives. There is no timer, so you can\n                take your time to choose the correct answer.\n              </Text>\n              <View style={animationContainer}>\n                <EasyModeLivesHelp />\n              </View>\n            </View>\n\n            <View style={[styles.instructionWrapper, flexDirection]}>\n              <Text style={[styles.instructionText, columnGap]}>\n                3. If you choose an incorrect answer, then you lose 1 life and\n                your winning streak goes back to zero.\n              </Text>\n              <View style={animationContainer}>\n                <WrongAnswerHelp />\n              </View>\n            </View>\n\n            <View style={[styles.instructionWrapper, flexDirection]}>\n              <Text style={[styles.instructionText, columnGap]}>\n                4. If you lose all your lives, the game is over.\n              </Text>\n              <View style={animationContainer}>\n                <LoseGameInstruction />\n              </View>\n            </View>\n          </View>\n\n          <Pressable onPress={() => setScene(\"Main\")}>\n            <ImageBackground\n              source={require(\"../Images/ticket.png\")}\n              style={styles.ticketImage}\n            >\n              <Text>Home</Text>\n            </ImageBackground>\n          </Pressable>\n        </ScrollView>\n      </View>\n    );\n  }\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setScene: (name) =>\n      dispatch({\n        type: \"SET_SCENE\",\n        name: name,\n      }),\n  };\n}\n\nconst styles = StyleSheet.create({\n  contentContainer: {\n    backgroundColor: \"#A0947C\",\n    marginTop: 10,\n    width: \"90%\",\n    alignSelf: \"center\",\n    padding: 5,\n    borderRadius: 8,\n  },\n  headings: {\n    fontFamily: \"Limelight_400Regular\",\n    borderRadius: 8,\n    padding: 20,\n    textAlign: \"center\",\n    color: \"#F2D379\",\n    fontSize: 30,\n    marginBottom: 15,\n    marginTop: 15,\n    backgroundColor: \"#292840\",\n  },\n  instructionWrapper: {\n    borderRadius: 8,\n    padding: 20,\n    backgroundColor: \"#292840\",\n    marginBottom: 15,\n    color: \"#F2D379\",\n  },\n  instructionText: {\n    fontSize: 20,\n    marginBottom: 15,\n    color: \"#F2D379\",\n    width: \"100%\",\n  },\n  instructionTextBullet: {\n    fontSize: 20,\n    marginBottom: 15,\n    marginLeft: 15,\n    color: \"#F2D379\",\n    width: \"100%\",\n  },\n  mainContainer: {\n    backgroundColor: \"#401323\",\n    height: \"100%\",\n  },\n  ticketImage: {\n    marginTop: 10,\n    flex: 1,\n    marginBottom: 10,\n    width: 200,\n    aspectRatio: 18 / 9,\n    alignSelf: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  mainAnimation: {\n    alignSelf: \"center\",\n    aspectRatio: Platform.OS === \"web\" ? 980 / 500 : 230 / 500,\n  },\n  settingAnimation: {\n    alignSelf: \"center\",\n    aspectRatio: Platform.OS === \"web\" ? 1000 / 600 : 1 / 3,\n  },\n});\n\nexport default connect(null, mapDispatchToProps)(HowToPlay);\n","import {\n  StyleSheet,\n  ScrollView,\n  SafeAreaView,\n  StatusBar,\n  Platform,\n  View,\n} from \"react-native\";\nimport { connect } from \"react-redux\";\nimport GameOver from \"../Scenes/GameOver\";\nimport Header from \"./Header\";\nimport Main from \"../Scenes/Main\";\nimport Footer from \"./Footer\";\nimport Question from \"../Scenes/Question\";\nimport CorrectAnswer from \"../Scenes/CorrectAnswer\";\nimport Credits from \"../Scenes/Credits\";\nimport About from \"../Scenes/About\";\nimport GamePlayMode from \"../Components/Header/GamePlayMode\";\nimport WrongAnswer from \"../Scenes/WrongAnswer\";\nimport HowToPlay from \"../Scenes/HowToPlay\";\n\nfunction Nav({ scene, modalVisible }) {\n  return (\n    <SafeAreaView style={styles.layout}>\n      <Header style={styles.header} />\n      <GamePlayMode style={styles.gamePlayMode} />\n      <ScrollView\n        style={styles.scrollView}\n        contentContainerStyle={{ flexGrow: 1 }}\n      >\n        {scene === \"Main\" && <Main />}\n        {scene === \"GameOver\" && <GameOver />}\n        {scene === \"Question\" && <Question />}\n        {scene === \"CorrectAnswer\" && <CorrectAnswer />}\n        {scene === \"Credits\" && <Credits />}\n        {scene === \"About\" && <About />}\n        {scene === \"WrongAnswer\" && <WrongAnswer />}\n        {scene === \"HowToPlay\" && <HowToPlay />}\n      </ScrollView>\n      {scene !== \"Question\" &&\n        scene !== \"CorrectAnswer\" &&\n        scene !== \"WrongAnswer\" && <Footer style={styles.footer} />}\n      {modalVisible && (\n        <View\n          style={{\n            position: \"absolute\",\n            height: \"100%\",\n            width: \"100%\",\n            opacity: 0.9,\n            backgroundColor: \"gray\",\n            zIndex: 100,\n          }}\n        />\n      )}\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  layout: {\n    flexGrow: 1,\n    overflow: \"hidden\",\n    marginTop: StatusBar.currentHeight,\n  },\n  header: {\n    height: \"10%\",\n  },\n  gamePlayMode: {\n    alignSelf: \"center\",\n    justifyContent: \"center\",\n  },\n  scrollView: {\n    flex: 1,\n    height: \"100%\",\n  },\n  footer: {\n    height: \"10%\",\n  },\n});\n\nfunction mapStateToProps(state) {\n  return {\n    scene: state.scene,\n    modalVisible: state.modalVisible,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setScene: () =>\n      dispatch({\n        type: \"SET_SCENE\",\n      }),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);\n","const initialState = {\n  winningStreak: 0,\n  scene: \"Main\",\n  movies: [],\n  selectedMovie: {},\n  gamePlayMode: \"singlePlayer\",\n  lives: 3,\n  modalVisible: false,\n  genre: null,\n  genreTypes: [],\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"INCREASE_WINNING_STREAK\":\n      return {\n        ...state,\n        winningStreak: state.winningStreak + 1,\n      };\n    case \"DECREASE_WINNING_STREAK\":\n      return {\n        ...state,\n        winningStreak: state.winningStreak - 1,\n      };\n    case \"RESET_WINNING_STREAK\":\n      return {\n        ...state,\n        winningStreak: 0,\n      };\n    case \"SET_SCENE\":\n      return {\n        ...state,\n        scene: action.name,\n      };\n    case \"SET_MOVIES\":\n      return {\n        ...state,\n        movies: action.movies,\n      };\n    case \"SET_SELECTED_MOVIE\":\n      return {\n        ...state,\n        selectedMovie: action.selectedMovie,\n      };\n    case \"RESET_SELECTED_MOVIE\":\n      return {\n        ...state,\n        selectedMovie: {},\n      };\n    case \"SET_PERFORMER_NAME\":\n      return {\n        ...state,\n        performerName: action.performerName,\n      };\n    case \"SET_GAME_PLAY_MODE\":\n      return {\n        ...state,\n        gamePlayMode: action.gamePlayMode,\n      };\n    case \"DECREASE_LIVES\":\n      return {\n        ...state,\n        lives: state.lives - 1,\n      };\n    case \"RESET_LIVES\":\n      return {\n        ...state,\n        lives: 3,\n      };\n    case \"SET_MODAL_VISIBLE\":\n      return {\n        ...state,\n        modalVisible: action.modalVisible,\n      };\n    case \"SET_GENRE\":\n      return {\n        ...state,\n        genre: action.genre,\n      };\n    case \"SET_GENRE_TYPES\":\n      return {\n        ...state,\n        genreTypes: action.genreTypes,\n      };\n  }\n  return state;\n};\n","import { createStore } from \"redux\";\nimport { reducer } from \"./reducer\";\n\nconst store = createStore(reducer);\n\nexport { store };","import { StatusBar } from \"expo-status-bar\";\nimport { Provider } from \"react-redux\";\nimport Nav from \"./Layout/Nav\";\nimport { store } from \"./Utils/store\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\n\nexport default function App() {\n  return (\n    <SafeAreaProvider>\n      <Provider store={store}>\n        <Nav />\n        <StatusBar style=\"auto\" />\n      </Provider>\n    </SafeAreaProvider>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/media/marqueeBackground.215d4964.png\";","module.exports = __webpack_public_path__ + \"static/media/clapper2-open.3f9ebb42.png\";","module.exports = __webpack_public_path__ + \"static/media/clapper2-closed.a1782b7c.png\";","module.exports = __webpack_public_path__ + \"static/media/clapper2-no-arm-arial-revised.ac3dc217.png\";","module.exports = __webpack_public_path__ + \"static/media/correctAnswerDemo.4685a51b.png\";","module.exports = __webpack_public_path__ + \"static/media/correctAnswerDemoMobile.602bb463.png\";","module.exports = __webpack_public_path__ + \"static/media/ticket.005bd25d.png\";"],"sourceRoot":""}